-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1.0
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity awgn_real3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    snr_V : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (17 downto 0) );
end;


architecture behav of awgn_real3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv128_lc_5 : STD_LOGIC_VECTOR (127 downto 0) := "11100001111100111110111110101010100101010110000111100100011001101001000011001000111001111110000101011001010000110101000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_5D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011101";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111101";
    constant ap_const_lv32_76 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110110";
    constant ap_const_lv32_75 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110101";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv32_6E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101110";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv34_0 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv58_0 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_80 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_const_lv9_180 : STD_LOGIC_VECTOR (8 downto 0) := "110000000";
    constant ap_const_lv15_4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv9_40 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv9_20 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv49_4000000 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000100000000000000000000000000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv21_1E0001 : STD_LOGIC_VECTOR (20 downto 0) := "111100000000000000001";
    constant ap_const_lv18_1FFFF : STD_LOGIC_VECTOR (17 downto 0) := "011111111111111111";
    constant ap_const_lv18_20001 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal chan_real_noise3_lfs : STD_LOGIC_VECTOR (127 downto 0) := "11100001111100111110111110101010100101010110000111100100011001101001000011001000111001111110000101011001010000110101000000001110";
    signal coarseContents_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal coarseContents_ce0 : STD_LOGIC;
    signal coarseContents_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal coarseContents_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal coarseContents_ce1 : STD_LOGIC;
    signal coarseContents_q1 : STD_LOGIC_VECTOR (16 downto 0);
    signal coarseContents_address2 : STD_LOGIC_VECTOR (8 downto 0);
    signal coarseContents_ce2 : STD_LOGIC;
    signal coarseContents_q2 : STD_LOGIC_VECTOR (16 downto 0);
    signal coarseContents_address3 : STD_LOGIC_VECTOR (8 downto 0);
    signal coarseContents_ce3 : STD_LOGIC;
    signal coarseContents_q3 : STD_LOGIC_VECTOR (16 downto 0);
    signal gradientContents_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal gradientContents_ce0 : STD_LOGIC;
    signal gradientContents_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal gradientContents_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal gradientContents_ce1 : STD_LOGIC;
    signal gradientContents_q1 : STD_LOGIC_VECTOR (12 downto 0);
    signal gradientContents_address2 : STD_LOGIC_VECTOR (8 downto 0);
    signal gradientContents_ce2 : STD_LOGIC;
    signal gradientContents_q2 : STD_LOGIC_VECTOR (12 downto 0);
    signal gradientContents_address3 : STD_LOGIC_VECTOR (8 downto 0);
    signal gradientContents_ce3 : STD_LOGIC;
    signal gradientContents_q3 : STD_LOGIC_VECTOR (12 downto 0);
    signal scaleLookup_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal scaleLookup_ce0 : STD_LOGIC;
    signal scaleLookup_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal snr_V_read_reg_1651 : STD_LOGIC_VECTOR (7 downto 0);
    signal snr_V_read_reg_1651_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal snr_V_read_reg_1651_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal snr_V_read_reg_1651_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal snr_V_read_reg_1651_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal snr_V_read_reg_1651_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_1656 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Val2_s_reg_1656_pp0_iter1_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Val2_s_reg_1656_pp0_iter2_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Val2_s_reg_1656_pp0_iter3_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Val2_s_reg_1656_pp0_iter4_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Val2_s_reg_1656_pp0_iter5_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal icmp_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1664 : STD_LOGIC_VECTOR (0 downto 0);
    signal norm_V_load_6_0_1_fu_354_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal norm_V_load_6_0_1_reg_1670 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp4_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp4_reg_1676 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp6125_i_reg_1682 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_96_fu_388_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_96_reg_1687 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_96_reg_1687_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_96_reg_1687_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_96_reg_1687_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp11_fu_412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp11_reg_1692 : STD_LOGIC_VECTOR (0 downto 0);
    signal norm_V_load_6_1_1_fu_436_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal norm_V_load_6_1_1_reg_1698 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp13_fu_454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp13_reg_1704 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp6125_i_1_reg_1710 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_128_1_reg_1715 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_128_1_reg_1715_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_128_1_reg_1715_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_128_1_reg_1715_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp15_fu_500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp15_reg_1720 : STD_LOGIC_VECTOR (0 downto 0);
    signal norm_V_load_6_2_1_fu_524_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal norm_V_load_6_2_1_reg_1726 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp16_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp16_reg_1732 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp6125_i_2_reg_1738 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_128_2_reg_1743 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_128_2_reg_1743_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_128_2_reg_1743_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_128_2_reg_1743_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp18_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp18_reg_1748 : STD_LOGIC_VECTOR (0 downto 0);
    signal norm_V_load_6_3_1_fu_612_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal norm_V_load_6_3_1_reg_1754 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp19_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp19_reg_1760 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp6125_i_3_reg_1766 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_128_3_reg_1771 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_128_3_reg_1771_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_128_3_reg_1771_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_128_3_reg_1771_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_55_fu_894_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_55_reg_1776 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_56_reg_1781 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_58_fu_1013_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_58_reg_1786 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_59_reg_1791 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_61_fu_1132_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_61_reg_1796 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_62_reg_1801 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_64_fu_1251_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_64_reg_1806 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_65_reg_1811 : STD_LOGIC_VECTOR (3 downto 0);
    signal coarseContents_load_reg_1856 : STD_LOGIC_VECTOR (16 downto 0);
    signal coarseContents_load_reg_1856_pp0_iter4_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal coarseContents_load_reg_1856_pp0_iter5_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal gradientContents_loa_reg_1861 : STD_LOGIC_VECTOR (12 downto 0);
    signal coarseContents_load_1_reg_1866 : STD_LOGIC_VECTOR (16 downto 0);
    signal coarseContents_load_1_reg_1866_pp0_iter4_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal coarseContents_load_1_reg_1866_pp0_iter5_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal gradientContents_loa_4_reg_1871 : STD_LOGIC_VECTOR (12 downto 0);
    signal coarseContents_load_2_reg_1876 : STD_LOGIC_VECTOR (16 downto 0);
    signal coarseContents_load_2_reg_1876_pp0_iter4_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal coarseContents_load_2_reg_1876_pp0_iter5_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal gradientContents_loa_5_reg_1881 : STD_LOGIC_VECTOR (12 downto 0);
    signal coarseContents_load_3_reg_1886 : STD_LOGIC_VECTOR (16 downto 0);
    signal coarseContents_load_3_reg_1886_pp0_iter4_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal coarseContents_load_3_reg_1886_pp0_iter5_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal gradientContents_loa_6_reg_1891 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1627_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_s_reg_1936 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1633_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_39_1_reg_1941 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1639_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_39_2_reg_1946 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1645_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_39_3_reg_1951 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp1_fu_1518_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp1_reg_1956 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp2_fu_1524_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp2_reg_1961 : STD_LOGIC_VECTOR (29 downto 0);
    signal centralLimitNoise_V_fu_1540_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal centralLimitNoise_V_reg_1971 : STD_LOGIC_VECTOR (30 downto 0);
    signal scale_V_reg_1976 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1552_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_42_reg_1991 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_fu_1561_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal r_V_reg_1996 : STD_LOGIC_VECTOR (48 downto 0);
    signal icmp21_fu_1587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp21_reg_2001 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_1593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_reg_2007 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal tmp_46_fu_1272_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_129_1_fu_1284_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_129_2_fu_1296_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_129_3_fu_1308_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_49_fu_1530_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_776_p3 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_88_fu_320_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_54_fu_336_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_346_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal phitmp6128_i_fu_310_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_89_fu_362_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_98_fu_402_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_57_fu_418_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_156_1_fu_428_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal phitmp6128_i_1_fu_392_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_99_fu_444_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_107_fu_490_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_60_fu_506_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_156_2_fu_516_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal phitmp6128_i_2_fu_480_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_108_fu_532_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_116_fu_578_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_63_fu_594_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_156_3_fu_604_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal phitmp6128_i_3_fu_568_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_117_fu_620_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_66_fu_670_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_30_fu_680_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs_V_fu_656_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_31_fu_688_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_18_fu_694_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_32_fu_704_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_33_fu_708_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_34_fu_714_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_126_fu_726_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_36_fu_730_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs_V_9_fu_666_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_37_fu_738_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_24_fu_744_p4 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_38_fu_754_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_39_fu_758_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_40_fu_764_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_35_fu_720_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_41_fu_770_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bramChapter_V_load_2_fu_790_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_158_0_s_fu_797_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_90_fu_804_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal norm_V_load_6_0_2_fu_816_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_91_fu_822_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal bramChapter_V_load_2_1_fu_809_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp7_fu_832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_158_0_1_fu_838_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_92_fu_852_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_fu_860_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal bramChapter_V_load_2_2_fu_844_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_94_fu_868_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_158_0_3_fu_876_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal bramChapter_V_load_fu_882_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_95_fu_890_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal bramChapter_V_load_2_3_fu_909_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_158_1_s_fu_916_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_100_fu_923_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal norm_V_load_6_1_2_fu_935_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_101_fu_941_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal bramChapter_V_load_2_4_fu_928_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp14_fu_951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_158_1_1_fu_957_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_102_fu_971_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_103_fu_979_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal bramChapter_V_load_2_5_fu_963_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_104_fu_987_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_158_1_3_fu_995_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal bramChapter_V_load_1_fu_1001_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_105_fu_1009_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal bramChapter_V_load_2_6_fu_1028_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_158_2_s_fu_1035_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_109_fu_1042_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal norm_V_load_6_2_2_fu_1054_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_110_fu_1060_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal bramChapter_V_load_2_7_fu_1047_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp17_fu_1070_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_158_2_1_fu_1076_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_111_fu_1090_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_112_fu_1098_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal bramChapter_V_load_2_8_fu_1082_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_113_fu_1106_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_158_2_3_fu_1114_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal bramChapter_V_load_s_fu_1120_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_114_fu_1128_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal bramChapter_V_load_2_9_fu_1147_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_158_3_s_fu_1154_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_118_fu_1161_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal norm_V_load_6_3_2_fu_1173_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_119_fu_1179_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal bramChapter_V_load_2_11_fu_1166_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp20_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_158_3_1_fu_1195_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_120_fu_1209_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_121_fu_1217_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal bramChapter_V_load_2_10_fu_1201_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_122_fu_1225_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_158_3_3_fu_1233_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal bramChapter_V_load_3_fu_1239_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_123_fu_1247_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_44_fu_1266_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_127_1_fu_1278_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_127_2_fu_1290_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_127_3_fu_1302_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_15_fu_1348_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_47_fu_1345_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_15_cast_fu_1355_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_87_fu_1338_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_1359_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal addconv_i_fu_1365_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_40_1_fu_1389_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_130_1_fu_1386_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_40_1_cast_fu_1396_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_97_fu_1379_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_136_1_fu_1400_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal addconv_i_1_fu_1406_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_40_2_fu_1430_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_130_2_fu_1427_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_40_2_cast_fu_1437_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_106_fu_1420_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_136_2_fu_1441_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal addconv_i_2_fu_1447_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_40_3_fu_1471_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_130_3_fu_1468_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_40_3_cast_fu_1478_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_115_fu_1461_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_136_3_fu_1482_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal addconv_i_3_fu_1488_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal noiseGen_V_load_fu_1371_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal noiseGen_V_load_4_fu_1412_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal noiseGen_V_load_5_fu_1453_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal noiseGen_V_load_6_fu_1494_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_0210_0_i_cast_fu_1506_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_0202_0_i_cast_fu_1502_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_cast_fu_1510_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_cast_20_fu_1514_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp2_cast_fu_1537_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp1_cast_fu_1534_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1552_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_50_fu_1558_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_128_fu_1577_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal roundedNoise_V_fu_1567_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_fu_1615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal saturatedNoise_V_2_fu_1608_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal saturatedNoise_V_fu_1599_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1627_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1633_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1639_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1645_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1552_ce : STD_LOGIC;
    signal grp_fu_1627_ce : STD_LOGIC;
    signal grp_fu_1633_ce : STD_LOGIC;
    signal grp_fu_1639_ce : STD_LOGIC;
    signal grp_fu_1645_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to14 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1552_p10 : STD_LOGIC_VECTOR (47 downto 0);
    signal grp_fu_1627_p00 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1633_p00 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1639_p00 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1645_p00 : STD_LOGIC_VECTOR (22 downto 0);

    component mod_and_chan_4x_mjbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component mod_and_chan_4x_mkbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component awgn_real1_coarseg8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address2 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address3 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component awgn_real1_gradiehbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        address2 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (12 downto 0);
        address3 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component awgn_real1_scaleLibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;



begin
    coarseContents_U : component awgn_real1_coarseg8j
    generic map (
        DataWidth => 17,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => coarseContents_address0,
        ce0 => coarseContents_ce0,
        q0 => coarseContents_q0,
        address1 => coarseContents_address1,
        ce1 => coarseContents_ce1,
        q1 => coarseContents_q1,
        address2 => coarseContents_address2,
        ce2 => coarseContents_ce2,
        q2 => coarseContents_q2,
        address3 => coarseContents_address3,
        ce3 => coarseContents_ce3,
        q3 => coarseContents_q3);

    gradientContents_U : component awgn_real1_gradiehbi
    generic map (
        DataWidth => 13,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => gradientContents_address0,
        ce0 => gradientContents_ce0,
        q0 => gradientContents_q0,
        address1 => gradientContents_address1,
        ce1 => gradientContents_ce1,
        q1 => gradientContents_q1,
        address2 => gradientContents_address2,
        ce2 => gradientContents_ce2,
        q2 => gradientContents_q2,
        address3 => gradientContents_address3,
        ce3 => gradientContents_ce3,
        q3 => gradientContents_q3);

    scaleLookup_U : component awgn_real1_scaleLibs
    generic map (
        DataWidth => 17,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => scaleLookup_address0,
        ce0 => scaleLookup_ce0,
        q0 => scaleLookup_q0);

    mod_and_chan_4x_mjbC_U40 : component mod_and_chan_4x_mjbC
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 31,
        din1_WIDTH => 17,
        dout_WIDTH => 48)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => centralLimitNoise_V_reg_1971,
        din1 => grp_fu_1552_p1,
        ce => grp_fu_1552_ce,
        dout => grp_fu_1552_p2);

    mod_and_chan_4x_mkbM_U41 : component mod_and_chan_4x_mkbM
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 13,
        din1_WIDTH => 10,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1627_p0,
        din1 => tmp_96_reg_1687_pp0_iter3_reg,
        ce => grp_fu_1627_ce,
        dout => grp_fu_1627_p2);

    mod_and_chan_4x_mkbM_U42 : component mod_and_chan_4x_mkbM
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 13,
        din1_WIDTH => 10,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1633_p0,
        din1 => tmp_128_1_reg_1715_pp0_iter3_reg,
        ce => grp_fu_1633_ce,
        dout => grp_fu_1633_p2);

    mod_and_chan_4x_mkbM_U43 : component mod_and_chan_4x_mkbM
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 13,
        din1_WIDTH => 10,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1639_p0,
        din1 => tmp_128_2_reg_1743_pp0_iter3_reg,
        ce => grp_fu_1639_ce,
        dout => grp_fu_1639_p2);

    mod_and_chan_4x_mkbM_U44 : component mod_and_chan_4x_mkbM
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 13,
        din1_WIDTH => 10,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1645_p0,
        din1 => tmp_128_3_reg_1771_pp0_iter3_reg,
        ce => grp_fu_1645_ce,
        dout => grp_fu_1645_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    chan_real_noise3_lfs_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                chan_real_noise3_lfs <= ap_const_lv128_lc_5;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce))) then 
                    chan_real_noise3_lfs <= p_Result_s_fu_776_p3;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then
                centralLimitNoise_V_reg_1971 <= centralLimitNoise_V_fu_1540_p2;
                coarseContents_load_1_reg_1866_pp0_iter4_reg <= coarseContents_load_1_reg_1866;
                coarseContents_load_1_reg_1866_pp0_iter5_reg <= coarseContents_load_1_reg_1866_pp0_iter4_reg;
                coarseContents_load_2_reg_1876_pp0_iter4_reg <= coarseContents_load_2_reg_1876;
                coarseContents_load_2_reg_1876_pp0_iter5_reg <= coarseContents_load_2_reg_1876_pp0_iter4_reg;
                coarseContents_load_3_reg_1886_pp0_iter4_reg <= coarseContents_load_3_reg_1886;
                coarseContents_load_3_reg_1886_pp0_iter5_reg <= coarseContents_load_3_reg_1886_pp0_iter4_reg;
                coarseContents_load_reg_1856_pp0_iter4_reg <= coarseContents_load_reg_1856;
                coarseContents_load_reg_1856_pp0_iter5_reg <= coarseContents_load_reg_1856_pp0_iter4_reg;
                icmp21_reg_2001 <= icmp21_fu_1587_p2;
                p_Val2_s_reg_1656_pp0_iter2_reg <= p_Val2_s_reg_1656_pp0_iter1_reg;
                p_Val2_s_reg_1656_pp0_iter3_reg <= p_Val2_s_reg_1656_pp0_iter2_reg;
                p_Val2_s_reg_1656_pp0_iter4_reg <= p_Val2_s_reg_1656_pp0_iter3_reg;
                p_Val2_s_reg_1656_pp0_iter5_reg <= p_Val2_s_reg_1656_pp0_iter4_reg;
                r_V_39_1_reg_1941 <= grp_fu_1633_p2;
                r_V_39_2_reg_1946 <= grp_fu_1639_p2;
                r_V_39_3_reg_1951 <= grp_fu_1645_p2;
                r_V_42_reg_1991 <= grp_fu_1552_p2;
                r_V_reg_1996 <= r_V_fu_1561_p2;
                r_V_s_reg_1936 <= grp_fu_1627_p2;
                scale_V_reg_1976 <= scaleLookup_q0;
                snr_V_read_reg_1651_pp0_iter2_reg <= snr_V_read_reg_1651_pp0_iter1_reg;
                snr_V_read_reg_1651_pp0_iter3_reg <= snr_V_read_reg_1651_pp0_iter2_reg;
                snr_V_read_reg_1651_pp0_iter4_reg <= snr_V_read_reg_1651_pp0_iter3_reg;
                snr_V_read_reg_1651_pp0_iter5_reg <= snr_V_read_reg_1651_pp0_iter4_reg;
                tmp1_reg_1956 <= tmp1_fu_1518_p2;
                tmp2_reg_1961 <= tmp2_fu_1524_p2;
                tmp_128_1_reg_1715_pp0_iter2_reg <= tmp_128_1_reg_1715_pp0_iter1_reg;
                tmp_128_1_reg_1715_pp0_iter3_reg <= tmp_128_1_reg_1715_pp0_iter2_reg;
                tmp_128_2_reg_1743_pp0_iter2_reg <= tmp_128_2_reg_1743_pp0_iter1_reg;
                tmp_128_2_reg_1743_pp0_iter3_reg <= tmp_128_2_reg_1743_pp0_iter2_reg;
                tmp_128_3_reg_1771_pp0_iter2_reg <= tmp_128_3_reg_1771_pp0_iter1_reg;
                tmp_128_3_reg_1771_pp0_iter3_reg <= tmp_128_3_reg_1771_pp0_iter2_reg;
                tmp_52_reg_2007 <= tmp_52_fu_1593_p2;
                tmp_96_reg_1687_pp0_iter2_reg <= tmp_96_reg_1687_pp0_iter1_reg;
                tmp_96_reg_1687_pp0_iter3_reg <= tmp_96_reg_1687_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then
                coarseContents_load_1_reg_1866 <= coarseContents_q1;
                coarseContents_load_2_reg_1876 <= coarseContents_q2;
                coarseContents_load_3_reg_1886 <= coarseContents_q3;
                coarseContents_load_reg_1856 <= coarseContents_q0;
                gradientContents_loa_4_reg_1871 <= gradientContents_q1;
                gradientContents_loa_5_reg_1881 <= gradientContents_q2;
                gradientContents_loa_6_reg_1891 <= gradientContents_q3;
                gradientContents_loa_reg_1861 <= gradientContents_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce))) then
                icmp11_reg_1692 <= icmp11_fu_412_p2;
                icmp13_reg_1704 <= icmp13_fu_454_p2;
                icmp15_reg_1720 <= icmp15_fu_500_p2;
                icmp16_reg_1732 <= icmp16_fu_542_p2;
                icmp18_reg_1748 <= icmp18_fu_588_p2;
                icmp19_reg_1760 <= icmp19_fu_630_p2;
                icmp4_reg_1676 <= icmp4_fu_372_p2;
                icmp_reg_1664 <= icmp_fu_330_p2;
                norm_V_load_6_0_1_reg_1670 <= norm_V_load_6_0_1_fu_354_p3;
                norm_V_load_6_1_1_reg_1698 <= norm_V_load_6_1_1_fu_436_p3;
                norm_V_load_6_2_1_reg_1726 <= norm_V_load_6_2_1_fu_524_p3;
                norm_V_load_6_3_1_reg_1754 <= norm_V_load_6_3_1_fu_612_p3;
                p_Val2_s_reg_1656 <= chan_real_noise3_lfs;
                p_Val2_s_reg_1656_pp0_iter1_reg <= p_Val2_s_reg_1656;
                phitmp6125_i_1_reg_1710 <= chan_real_noise3_lfs(46 downto 42);
                phitmp6125_i_2_reg_1738 <= chan_real_noise3_lfs(78 downto 74);
                phitmp6125_i_3_reg_1766 <= chan_real_noise3_lfs(110 downto 106);
                phitmp6125_i_reg_1682 <= chan_real_noise3_lfs(14 downto 10);
                snr_V_read_reg_1651 <= snr_V;
                snr_V_read_reg_1651_pp0_iter1_reg <= snr_V_read_reg_1651;
                tmp_128_1_reg_1715 <= chan_real_noise3_lfs(41 downto 32);
                tmp_128_1_reg_1715_pp0_iter1_reg <= tmp_128_1_reg_1715;
                tmp_128_2_reg_1743 <= chan_real_noise3_lfs(73 downto 64);
                tmp_128_2_reg_1743_pp0_iter1_reg <= tmp_128_2_reg_1743;
                tmp_128_3_reg_1771 <= chan_real_noise3_lfs(105 downto 96);
                tmp_128_3_reg_1771_pp0_iter1_reg <= tmp_128_3_reg_1771;
                tmp_55_reg_1776 <= tmp_55_fu_894_p2;
                tmp_56_reg_1781 <= bramChapter_V_load_fu_882_p3(8 downto 5);
                tmp_58_reg_1786 <= tmp_58_fu_1013_p2;
                tmp_59_reg_1791 <= bramChapter_V_load_1_fu_1001_p3(8 downto 5);
                tmp_61_reg_1796 <= tmp_61_fu_1132_p2;
                tmp_62_reg_1801 <= bramChapter_V_load_s_fu_1120_p3(8 downto 5);
                tmp_64_reg_1806 <= tmp_64_fu_1251_p2;
                tmp_65_reg_1811 <= bramChapter_V_load_3_fu_1239_p3(8 downto 5);
                tmp_96_reg_1687 <= tmp_96_fu_388_p1;
                tmp_96_reg_1687_pp0_iter1_reg <= tmp_96_reg_1687;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    addconv_i_1_fu_1406_p2 <= std_logic_vector(unsigned(r_V_40_1_cast_fu_1396_p1) + unsigned(tmp_130_1_fu_1386_p1));
    addconv_i_2_fu_1447_p2 <= std_logic_vector(unsigned(r_V_40_2_cast_fu_1437_p1) + unsigned(tmp_130_2_fu_1427_p1));
    addconv_i_3_fu_1488_p2 <= std_logic_vector(unsigned(r_V_40_3_cast_fu_1478_p1) + unsigned(tmp_130_3_fu_1468_p1));
    addconv_i_fu_1365_p2 <= std_logic_vector(unsigned(r_V_15_cast_fu_1355_p1) + unsigned(tmp_47_fu_1345_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter15, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce)) or ((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to14_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to14 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to14)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        saturatedNoise_V_2_fu_1608_p3 when (tmp_fu_1615_p2(0) = '1') else 
        saturatedNoise_V_fu_1599_p4;
    bramChapter_V_load_1_fu_1001_p3 <= 
        tmp_158_1_3_fu_995_p2 when (tmp_104_fu_987_p3(0) = '1') else 
        bramChapter_V_load_2_5_fu_963_p3;
    bramChapter_V_load_2_10_fu_1201_p3 <= 
        bramChapter_V_load_2_11_fu_1166_p3 when (icmp20_fu_1189_p2(0) = '1') else 
        tmp_158_3_1_fu_1195_p2;
    bramChapter_V_load_2_11_fu_1166_p3 <= 
        bramChapter_V_load_2_9_fu_1147_p3 when (icmp19_reg_1760(0) = '1') else 
        tmp_158_3_s_fu_1154_p3;
    bramChapter_V_load_2_1_fu_809_p3 <= 
        bramChapter_V_load_2_fu_790_p3 when (icmp4_reg_1676(0) = '1') else 
        tmp_158_0_s_fu_797_p3;
    bramChapter_V_load_2_2_fu_844_p3 <= 
        bramChapter_V_load_2_1_fu_809_p3 when (icmp7_fu_832_p2(0) = '1') else 
        tmp_158_0_1_fu_838_p2;
    bramChapter_V_load_2_3_fu_909_p3 <= 
        ap_const_lv9_0 when (icmp11_reg_1692(0) = '1') else 
        ap_const_lv9_100;
    bramChapter_V_load_2_4_fu_928_p3 <= 
        bramChapter_V_load_2_3_fu_909_p3 when (icmp13_reg_1704(0) = '1') else 
        tmp_158_1_s_fu_916_p3;
    bramChapter_V_load_2_5_fu_963_p3 <= 
        bramChapter_V_load_2_4_fu_928_p3 when (icmp14_fu_951_p2(0) = '1') else 
        tmp_158_1_1_fu_957_p2;
    bramChapter_V_load_2_6_fu_1028_p3 <= 
        ap_const_lv9_0 when (icmp15_reg_1720(0) = '1') else 
        ap_const_lv9_100;
    bramChapter_V_load_2_7_fu_1047_p3 <= 
        bramChapter_V_load_2_6_fu_1028_p3 when (icmp16_reg_1732(0) = '1') else 
        tmp_158_2_s_fu_1035_p3;
    bramChapter_V_load_2_8_fu_1082_p3 <= 
        bramChapter_V_load_2_7_fu_1047_p3 when (icmp17_fu_1070_p2(0) = '1') else 
        tmp_158_2_1_fu_1076_p2;
    bramChapter_V_load_2_9_fu_1147_p3 <= 
        ap_const_lv9_0 when (icmp18_reg_1748(0) = '1') else 
        ap_const_lv9_100;
    bramChapter_V_load_2_fu_790_p3 <= 
        ap_const_lv9_0 when (icmp_reg_1664(0) = '1') else 
        ap_const_lv9_100;
    bramChapter_V_load_3_fu_1239_p3 <= 
        tmp_158_3_3_fu_1233_p2 when (tmp_122_fu_1225_p3(0) = '1') else 
        bramChapter_V_load_2_10_fu_1201_p3;
    bramChapter_V_load_fu_882_p3 <= 
        tmp_158_0_3_fu_876_p2 when (tmp_94_fu_868_p3(0) = '1') else 
        bramChapter_V_load_2_2_fu_844_p3;
    bramChapter_V_load_s_fu_1120_p3 <= 
        tmp_158_2_3_fu_1114_p2 when (tmp_113_fu_1106_p3(0) = '1') else 
        bramChapter_V_load_2_8_fu_1082_p3;
    centralLimitNoise_V_fu_1540_p2 <= std_logic_vector(signed(tmp2_cast_fu_1537_p1) + signed(tmp1_cast_fu_1534_p1));
    coarseContents_address0 <= tmp_46_fu_1272_p1(9 - 1 downto 0);
    coarseContents_address1 <= tmp_129_1_fu_1284_p1(9 - 1 downto 0);
    coarseContents_address2 <= tmp_129_2_fu_1296_p1(9 - 1 downto 0);
    coarseContents_address3 <= tmp_129_3_fu_1308_p1(9 - 1 downto 0);

    coarseContents_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            coarseContents_ce0 <= ap_const_logic_1;
        else 
            coarseContents_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    coarseContents_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            coarseContents_ce1 <= ap_const_logic_1;
        else 
            coarseContents_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    coarseContents_ce2_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            coarseContents_ce2 <= ap_const_logic_1;
        else 
            coarseContents_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    coarseContents_ce3_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            coarseContents_ce3 <= ap_const_logic_1;
        else 
            coarseContents_ce3 <= ap_const_logic_0;
        end if; 
    end process;

    gradientContents_address0 <= tmp_46_fu_1272_p1(9 - 1 downto 0);
    gradientContents_address1 <= tmp_129_1_fu_1284_p1(9 - 1 downto 0);
    gradientContents_address2 <= tmp_129_2_fu_1296_p1(9 - 1 downto 0);
    gradientContents_address3 <= tmp_129_3_fu_1308_p1(9 - 1 downto 0);

    gradientContents_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            gradientContents_ce0 <= ap_const_logic_1;
        else 
            gradientContents_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    gradientContents_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            gradientContents_ce1 <= ap_const_logic_1;
        else 
            gradientContents_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    gradientContents_ce2_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            gradientContents_ce2 <= ap_const_logic_1;
        else 
            gradientContents_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    gradientContents_ce3_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            gradientContents_ce3 <= ap_const_logic_1;
        else 
            gradientContents_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1552_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_1552_ce <= ap_const_logic_1;
        else 
            grp_fu_1552_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1552_p1 <= grp_fu_1552_p10(17 - 1 downto 0);
    grp_fu_1552_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(scale_V_reg_1976),48));

    grp_fu_1627_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_1627_ce <= ap_const_logic_1;
        else 
            grp_fu_1627_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1627_p0 <= grp_fu_1627_p00(13 - 1 downto 0);
    grp_fu_1627_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(gradientContents_loa_reg_1861),23));

    grp_fu_1633_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_1633_ce <= ap_const_logic_1;
        else 
            grp_fu_1633_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1633_p0 <= grp_fu_1633_p00(13 - 1 downto 0);
    grp_fu_1633_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(gradientContents_loa_4_reg_1871),23));

    grp_fu_1639_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_1639_ce <= ap_const_logic_1;
        else 
            grp_fu_1639_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1639_p0 <= grp_fu_1639_p00(13 - 1 downto 0);
    grp_fu_1639_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(gradientContents_loa_5_reg_1881),23));

    grp_fu_1645_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_1645_ce <= ap_const_logic_1;
        else 
            grp_fu_1645_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1645_p0 <= grp_fu_1645_p00(13 - 1 downto 0);
    grp_fu_1645_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(gradientContents_loa_6_reg_1891),23));
    icmp11_fu_412_p2 <= "1" when (tmp_98_fu_402_p4 = ap_const_lv8_0) else "0";
    icmp13_fu_454_p2 <= "1" when (tmp_99_fu_444_p4 = ap_const_lv4_0) else "0";
    icmp14_fu_951_p2 <= "1" when (tmp_101_fu_941_p4 = ap_const_lv2_0) else "0";
    icmp15_fu_500_p2 <= "1" when (tmp_107_fu_490_p4 = ap_const_lv8_0) else "0";
    icmp16_fu_542_p2 <= "1" when (tmp_108_fu_532_p4 = ap_const_lv4_0) else "0";
    icmp17_fu_1070_p2 <= "1" when (tmp_110_fu_1060_p4 = ap_const_lv2_0) else "0";
    icmp18_fu_588_p2 <= "1" when (tmp_116_fu_578_p4 = ap_const_lv8_0) else "0";
    icmp19_fu_630_p2 <= "1" when (tmp_117_fu_620_p4 = ap_const_lv4_0) else "0";
    icmp20_fu_1189_p2 <= "1" when (tmp_119_fu_1179_p4 = ap_const_lv2_0) else "0";
    icmp21_fu_1587_p2 <= "1" when (signed(tmp_128_fu_1577_p4) > signed(ap_const_lv4_0)) else "0";
    icmp4_fu_372_p2 <= "1" when (tmp_89_fu_362_p4 = ap_const_lv4_0) else "0";
    icmp7_fu_832_p2 <= "1" when (tmp_91_fu_822_p4 = ap_const_lv2_0) else "0";
    icmp_fu_330_p2 <= "1" when (tmp_88_fu_320_p4 = ap_const_lv8_0) else "0";
    noiseGen_V_load_4_fu_1412_p3 <= 
        tmp_136_1_fu_1400_p2 when (tmp_97_fu_1379_p3(0) = '1') else 
        addconv_i_1_fu_1406_p2;
    noiseGen_V_load_5_fu_1453_p3 <= 
        tmp_136_2_fu_1441_p2 when (tmp_106_fu_1420_p3(0) = '1') else 
        addconv_i_2_fu_1447_p2;
    noiseGen_V_load_6_fu_1494_p3 <= 
        tmp_136_3_fu_1482_p2 when (tmp_115_fu_1461_p3(0) = '1') else 
        addconv_i_3_fu_1488_p2;
    noiseGen_V_load_fu_1371_p3 <= 
        tmp_48_fu_1359_p2 when (tmp_87_fu_1338_p3(0) = '1') else 
        addconv_i_fu_1365_p2;
    norm_V_load_6_0_1_fu_354_p3 <= 
        tmp_s_fu_346_p3 when (icmp_fu_330_p2(0) = '1') else 
        phitmp6128_i_fu_310_p4;
    norm_V_load_6_0_2_fu_816_p3 <= 
        tmp_90_fu_804_p2 when (icmp4_reg_1676(0) = '1') else 
        norm_V_load_6_0_1_reg_1670;
    norm_V_load_6_1_1_fu_436_p3 <= 
        tmp_156_1_fu_428_p3 when (icmp11_fu_412_p2(0) = '1') else 
        phitmp6128_i_1_fu_392_p4;
    norm_V_load_6_1_2_fu_935_p3 <= 
        tmp_100_fu_923_p2 when (icmp13_reg_1704(0) = '1') else 
        norm_V_load_6_1_1_reg_1698;
    norm_V_load_6_2_1_fu_524_p3 <= 
        tmp_156_2_fu_516_p3 when (icmp15_fu_500_p2(0) = '1') else 
        phitmp6128_i_2_fu_480_p4;
    norm_V_load_6_2_2_fu_1054_p3 <= 
        tmp_109_fu_1042_p2 when (icmp16_reg_1732(0) = '1') else 
        norm_V_load_6_2_1_reg_1726;
    norm_V_load_6_3_1_fu_612_p3 <= 
        tmp_156_3_fu_604_p3 when (icmp18_fu_588_p2(0) = '1') else 
        phitmp6128_i_3_fu_568_p4;
    norm_V_load_6_3_2_fu_1173_p3 <= 
        tmp_118_fu_1161_p2 when (icmp19_reg_1760(0) = '1') else 
        norm_V_load_6_3_1_reg_1754;
        p_0202_0_i_cast_fu_1502_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(noiseGen_V_load_fu_1371_p3),30));

        p_0210_0_i_cast_fu_1506_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(noiseGen_V_load_4_fu_1412_p3),30));

    p_Result_s_fu_776_p3 <= (r_V_35_fu_720_p2 & r_V_41_fu_770_p2);
    phitmp6128_i_1_fu_392_p4 <= chan_real_noise3_lfs(61 downto 47);
    phitmp6128_i_2_fu_480_p4 <= chan_real_noise3_lfs(93 downto 79);
    phitmp6128_i_3_fu_568_p4 <= chan_real_noise3_lfs(125 downto 111);
    phitmp6128_i_fu_310_p4 <= chan_real_noise3_lfs(29 downto 15);
    r_V_15_cast_fu_1355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_15_fu_1348_p3),29));
    r_V_15_fu_1348_p3 <= (coarseContents_load_reg_1856_pp0_iter5_reg & ap_const_lv10_0);
    r_V_18_fu_694_p4 <= r_V_31_fu_688_p2(63 downto 35);
    r_V_24_fu_744_p4 <= r_V_37_fu_738_p2(63 downto 13);
    r_V_30_fu_680_p3 <= (tmp_66_fu_670_p4 & ap_const_lv34_0);
    r_V_31_fu_688_p2 <= (rhs_V_fu_656_p4 xor r_V_30_fu_680_p3);
    r_V_32_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_18_fu_694_p4),64));
    r_V_33_fu_708_p2 <= (r_V_32_fu_704_p1 xor r_V_31_fu_688_p2);
    r_V_34_fu_714_p2 <= std_logic_vector(shift_left(unsigned(r_V_33_fu_708_p2),to_integer(unsigned('0' & ap_const_lv64_1(31-1 downto 0)))));
    r_V_35_fu_720_p2 <= (r_V_34_fu_714_p2 xor r_V_33_fu_708_p2);
    r_V_36_fu_730_p3 <= (tmp_126_fu_726_p1 & ap_const_lv58_0);
    r_V_37_fu_738_p2 <= (rhs_V_9_fu_666_p1 xor r_V_36_fu_730_p3);
    r_V_38_fu_754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_24_fu_744_p4),64));
    r_V_39_fu_758_p2 <= (r_V_38_fu_754_p1 xor r_V_37_fu_738_p2);
    r_V_40_1_cast_fu_1396_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_40_1_fu_1389_p3),29));
    r_V_40_1_fu_1389_p3 <= (coarseContents_load_1_reg_1866_pp0_iter5_reg & ap_const_lv10_0);
    r_V_40_2_cast_fu_1437_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_40_2_fu_1430_p3),29));
    r_V_40_2_fu_1430_p3 <= (coarseContents_load_2_reg_1876_pp0_iter5_reg & ap_const_lv10_0);
    r_V_40_3_cast_fu_1478_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_40_3_fu_1471_p3),29));
    r_V_40_3_fu_1471_p3 <= (coarseContents_load_3_reg_1886_pp0_iter5_reg & ap_const_lv10_0);
    r_V_40_fu_764_p2 <= std_logic_vector(shift_left(unsigned(r_V_39_fu_758_p2),to_integer(unsigned('0' & ap_const_lv64_7(31-1 downto 0)))));
    r_V_41_fu_770_p2 <= (r_V_40_fu_764_p2 xor r_V_39_fu_758_p2);
    r_V_fu_1561_p2 <= std_logic_vector(unsigned(ap_const_lv49_4000000) + unsigned(tmp_50_fu_1558_p1));
    rhs_V_9_fu_666_p1 <= chan_real_noise3_lfs(64 - 1 downto 0);
    rhs_V_fu_656_p4 <= chan_real_noise3_lfs(127 downto 64);
    roundedNoise_V_fu_1567_p4 <= r_V_fu_1561_p2(47 downto 27);
    saturatedNoise_V_2_fu_1608_p3 <= 
        ap_const_lv18_1FFFF when (icmp21_reg_2001(0) = '1') else 
        ap_const_lv18_20001;
    saturatedNoise_V_fu_1599_p4 <= r_V_reg_1996(44 downto 27);
    scaleLookup_address0 <= tmp_49_fu_1530_p1(8 - 1 downto 0);

    scaleLookup_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            scaleLookup_ce0 <= ap_const_logic_1;
        else 
            scaleLookup_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        tmp1_cast_fu_1534_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp1_reg_1956),31));

    tmp1_fu_1518_p2 <= std_logic_vector(signed(p_0210_0_i_cast_fu_1506_p1) + signed(p_0202_0_i_cast_fu_1502_p1));
        tmp2_cast_fu_1537_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp2_reg_1961),31));

    tmp2_fu_1524_p2 <= std_logic_vector(signed(tmp_cast_fu_1510_p1) + signed(tmp_cast_20_fu_1514_p1));
    tmp_100_fu_923_p2 <= std_logic_vector(shift_left(unsigned(norm_V_load_6_1_1_reg_1698),to_integer(unsigned('0' & ap_const_lv15_4(15-1 downto 0)))));
    tmp_101_fu_941_p4 <= norm_V_load_6_1_2_fu_935_p3(14 downto 13);
    tmp_102_fu_971_p3 <= norm_V_load_6_1_2_fu_935_p3(12 downto 12);
    tmp_103_fu_979_p3 <= norm_V_load_6_1_2_fu_935_p3(14 downto 14);
    tmp_104_fu_987_p3 <= 
        tmp_102_fu_971_p3 when (icmp14_fu_951_p2(0) = '1') else 
        tmp_103_fu_979_p3;
    tmp_105_fu_1009_p1 <= bramChapter_V_load_1_fu_1001_p3(5 - 1 downto 0);
    tmp_106_fu_1420_p3 <= p_Val2_s_reg_1656_pp0_iter5_reg(95 downto 95);
    tmp_107_fu_490_p4 <= chan_real_noise3_lfs(93 downto 86);
    tmp_108_fu_532_p4 <= norm_V_load_6_2_1_fu_524_p3(14 downto 11);
    tmp_109_fu_1042_p2 <= std_logic_vector(shift_left(unsigned(norm_V_load_6_2_1_reg_1726),to_integer(unsigned('0' & ap_const_lv15_4(15-1 downto 0)))));
    tmp_110_fu_1060_p4 <= norm_V_load_6_2_2_fu_1054_p3(14 downto 13);
    tmp_111_fu_1090_p3 <= norm_V_load_6_2_2_fu_1054_p3(12 downto 12);
    tmp_112_fu_1098_p3 <= norm_V_load_6_2_2_fu_1054_p3(14 downto 14);
    tmp_113_fu_1106_p3 <= 
        tmp_111_fu_1090_p3 when (icmp17_fu_1070_p2(0) = '1') else 
        tmp_112_fu_1098_p3;
    tmp_114_fu_1128_p1 <= bramChapter_V_load_s_fu_1120_p3(5 - 1 downto 0);
    tmp_115_fu_1461_p3 <= p_Val2_s_reg_1656_pp0_iter5_reg(127 downto 127);
    tmp_116_fu_578_p4 <= chan_real_noise3_lfs(125 downto 118);
    tmp_117_fu_620_p4 <= norm_V_load_6_3_1_fu_612_p3(14 downto 11);
    tmp_118_fu_1161_p2 <= std_logic_vector(shift_left(unsigned(norm_V_load_6_3_1_reg_1754),to_integer(unsigned('0' & ap_const_lv15_4(15-1 downto 0)))));
    tmp_119_fu_1179_p4 <= norm_V_load_6_3_2_fu_1173_p3(14 downto 13);
    tmp_120_fu_1209_p3 <= norm_V_load_6_3_2_fu_1173_p3(12 downto 12);
    tmp_121_fu_1217_p3 <= norm_V_load_6_3_2_fu_1173_p3(14 downto 14);
    tmp_122_fu_1225_p3 <= 
        tmp_120_fu_1209_p3 when (icmp20_fu_1189_p2(0) = '1') else 
        tmp_121_fu_1217_p3;
    tmp_123_fu_1247_p1 <= bramChapter_V_load_3_fu_1239_p3(5 - 1 downto 0);
    tmp_126_fu_726_p1 <= chan_real_noise3_lfs(6 - 1 downto 0);
    tmp_127_1_fu_1278_p3 <= (tmp_59_reg_1791 & tmp_58_reg_1786);
    tmp_127_2_fu_1290_p3 <= (tmp_62_reg_1801 & tmp_61_reg_1796);
    tmp_127_3_fu_1302_p3 <= (tmp_65_reg_1811 & tmp_64_reg_1806);
    tmp_128_fu_1577_p4 <= r_V_fu_1561_p2(47 downto 44);
    tmp_129_1_fu_1284_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_127_1_fu_1278_p3),64));
    tmp_129_2_fu_1296_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_127_2_fu_1290_p3),64));
    tmp_129_3_fu_1308_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_127_3_fu_1302_p3),64));
        tmp_130_1_fu_1386_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_39_1_reg_1941),29));

        tmp_130_2_fu_1427_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_39_2_reg_1946),29));

        tmp_130_3_fu_1468_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_39_3_reg_1951),29));

    tmp_136_1_fu_1400_p2 <= std_logic_vector(signed(tmp_130_1_fu_1386_p1) - signed(r_V_40_1_cast_fu_1396_p1));
    tmp_136_2_fu_1441_p2 <= std_logic_vector(signed(tmp_130_2_fu_1427_p1) - signed(r_V_40_2_cast_fu_1437_p1));
    tmp_136_3_fu_1482_p2 <= std_logic_vector(signed(tmp_130_3_fu_1468_p1) - signed(r_V_40_3_cast_fu_1478_p1));
    tmp_156_1_fu_428_p3 <= (tmp_57_fu_418_p4 & ap_const_lv8_0);
    tmp_156_2_fu_516_p3 <= (tmp_60_fu_506_p4 & ap_const_lv8_0);
    tmp_156_3_fu_604_p3 <= (tmp_63_fu_594_p4 & ap_const_lv8_0);
    tmp_158_0_1_fu_838_p2 <= (bramChapter_V_load_2_1_fu_809_p3 or ap_const_lv9_40);
    tmp_158_0_3_fu_876_p2 <= (bramChapter_V_load_2_2_fu_844_p3 or ap_const_lv9_20);
    tmp_158_0_s_fu_797_p3 <= 
        ap_const_lv9_80 when (icmp_reg_1664(0) = '1') else 
        ap_const_lv9_180;
    tmp_158_1_1_fu_957_p2 <= (bramChapter_V_load_2_4_fu_928_p3 or ap_const_lv9_40);
    tmp_158_1_3_fu_995_p2 <= (bramChapter_V_load_2_5_fu_963_p3 or ap_const_lv9_20);
    tmp_158_1_s_fu_916_p3 <= 
        ap_const_lv9_80 when (icmp11_reg_1692(0) = '1') else 
        ap_const_lv9_180;
    tmp_158_2_1_fu_1076_p2 <= (bramChapter_V_load_2_7_fu_1047_p3 or ap_const_lv9_40);
    tmp_158_2_3_fu_1114_p2 <= (bramChapter_V_load_2_8_fu_1082_p3 or ap_const_lv9_20);
    tmp_158_2_s_fu_1035_p3 <= 
        ap_const_lv9_80 when (icmp15_reg_1720(0) = '1') else 
        ap_const_lv9_180;
    tmp_158_3_1_fu_1195_p2 <= (bramChapter_V_load_2_11_fu_1166_p3 or ap_const_lv9_40);
    tmp_158_3_3_fu_1233_p2 <= (bramChapter_V_load_2_10_fu_1201_p3 or ap_const_lv9_20);
    tmp_158_3_s_fu_1154_p3 <= 
        ap_const_lv9_80 when (icmp18_reg_1748(0) = '1') else 
        ap_const_lv9_180;
    tmp_44_fu_1266_p3 <= (tmp_56_reg_1781 & tmp_55_reg_1776);
    tmp_46_fu_1272_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_44_fu_1266_p3),64));
        tmp_47_fu_1345_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_s_reg_1936),29));

    tmp_48_fu_1359_p2 <= std_logic_vector(signed(tmp_47_fu_1345_p1) - signed(r_V_15_cast_fu_1355_p1));
    tmp_49_fu_1530_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(snr_V_read_reg_1651_pp0_iter5_reg),64));
    tmp_50_fu_1558_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_42_reg_1991),49));
    tmp_52_fu_1593_p2 <= "1" when (signed(roundedNoise_V_fu_1567_p4) < signed(ap_const_lv21_1E0001)) else "0";
    tmp_54_fu_336_p4 <= chan_real_noise3_lfs(21 downto 15);
    tmp_55_fu_894_p2 <= (tmp_95_fu_890_p1 or phitmp6125_i_reg_1682);
    tmp_57_fu_418_p4 <= chan_real_noise3_lfs(53 downto 47);
    tmp_58_fu_1013_p2 <= (tmp_105_fu_1009_p1 or phitmp6125_i_1_reg_1710);
    tmp_60_fu_506_p4 <= chan_real_noise3_lfs(85 downto 79);
    tmp_61_fu_1132_p2 <= (tmp_114_fu_1128_p1 or phitmp6125_i_2_reg_1738);
    tmp_63_fu_594_p4 <= chan_real_noise3_lfs(117 downto 111);
    tmp_64_fu_1251_p2 <= (tmp_123_fu_1247_p1 or phitmp6125_i_3_reg_1766);
    tmp_66_fu_670_p4 <= chan_real_noise3_lfs(93 downto 64);
    tmp_87_fu_1338_p3 <= p_Val2_s_reg_1656_pp0_iter5_reg(31 downto 31);
    tmp_88_fu_320_p4 <= chan_real_noise3_lfs(29 downto 22);
    tmp_89_fu_362_p4 <= norm_V_load_6_0_1_fu_354_p3(14 downto 11);
    tmp_90_fu_804_p2 <= std_logic_vector(shift_left(unsigned(norm_V_load_6_0_1_reg_1670),to_integer(unsigned('0' & ap_const_lv15_4(15-1 downto 0)))));
    tmp_91_fu_822_p4 <= norm_V_load_6_0_2_fu_816_p3(14 downto 13);
    tmp_92_fu_852_p3 <= norm_V_load_6_0_2_fu_816_p3(12 downto 12);
    tmp_93_fu_860_p3 <= norm_V_load_6_0_2_fu_816_p3(14 downto 14);
    tmp_94_fu_868_p3 <= 
        tmp_92_fu_852_p3 when (icmp7_fu_832_p2(0) = '1') else 
        tmp_93_fu_860_p3;
    tmp_95_fu_890_p1 <= bramChapter_V_load_fu_882_p3(5 - 1 downto 0);
    tmp_96_fu_388_p1 <= chan_real_noise3_lfs(10 - 1 downto 0);
    tmp_97_fu_1379_p3 <= p_Val2_s_reg_1656_pp0_iter5_reg(63 downto 63);
    tmp_98_fu_402_p4 <= chan_real_noise3_lfs(61 downto 54);
    tmp_99_fu_444_p4 <= norm_V_load_6_1_1_fu_436_p3(14 downto 11);
        tmp_cast_20_fu_1514_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(noiseGen_V_load_6_fu_1494_p3),30));

        tmp_cast_fu_1510_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(noiseGen_V_load_5_fu_1453_p3),30));

    tmp_fu_1615_p2 <= (tmp_52_reg_2007 or icmp21_reg_2001);
    tmp_s_fu_346_p3 <= (tmp_54_fu_336_p4 & ap_const_lv8_0);
end behav;
