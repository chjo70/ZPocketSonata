// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1.0
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module awgn_real2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        snr_V,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [7:0] snr_V;
output  [17:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
reg    ap_block_pp0_stage0_11001;
reg   [127:0] chan_real_noise2_lfs;
wire   [8:0] coarseContents_address0;
reg    coarseContents_ce0;
wire   [16:0] coarseContents_q0;
wire   [8:0] coarseContents_address1;
reg    coarseContents_ce1;
wire   [16:0] coarseContents_q1;
wire   [8:0] coarseContents_address2;
reg    coarseContents_ce2;
wire   [16:0] coarseContents_q2;
wire   [8:0] coarseContents_address3;
reg    coarseContents_ce3;
wire   [16:0] coarseContents_q3;
wire   [8:0] gradientContents_address0;
reg    gradientContents_ce0;
wire   [12:0] gradientContents_q0;
wire   [8:0] gradientContents_address1;
reg    gradientContents_ce1;
wire   [12:0] gradientContents_q1;
wire   [8:0] gradientContents_address2;
reg    gradientContents_ce2;
wire   [12:0] gradientContents_q2;
wire   [8:0] gradientContents_address3;
reg    gradientContents_ce3;
wire   [12:0] gradientContents_q3;
wire   [7:0] scaleLookup_address0;
reg    scaleLookup_ce0;
wire   [16:0] scaleLookup_q0;
reg   [7:0] snr_V_read_reg_1651;
reg   [7:0] snr_V_read_reg_1651_pp0_iter1_reg;
reg   [7:0] snr_V_read_reg_1651_pp0_iter2_reg;
reg   [7:0] snr_V_read_reg_1651_pp0_iter3_reg;
reg   [7:0] snr_V_read_reg_1651_pp0_iter4_reg;
reg   [7:0] snr_V_read_reg_1651_pp0_iter5_reg;
reg   [127:0] p_Val2_s_reg_1656;
reg   [127:0] p_Val2_s_reg_1656_pp0_iter1_reg;
reg   [127:0] p_Val2_s_reg_1656_pp0_iter2_reg;
reg   [127:0] p_Val2_s_reg_1656_pp0_iter3_reg;
reg   [127:0] p_Val2_s_reg_1656_pp0_iter4_reg;
reg   [127:0] p_Val2_s_reg_1656_pp0_iter5_reg;
wire   [0:0] icmp_fu_330_p2;
reg   [0:0] icmp_reg_1664;
wire   [14:0] norm_V_load_9_0_1_fu_354_p3;
reg   [14:0] norm_V_load_9_0_1_reg_1670;
wire   [0:0] icmp4_fu_372_p2;
reg   [0:0] icmp4_reg_1676;
reg   [4:0] phitmp6125_i_reg_1682;
wire   [9:0] tmp_138_fu_388_p1;
reg   [9:0] tmp_138_reg_1687;
reg   [9:0] tmp_138_reg_1687_pp0_iter1_reg;
reg   [9:0] tmp_138_reg_1687_pp0_iter2_reg;
reg  signed [9:0] tmp_138_reg_1687_pp0_iter3_reg;
wire   [0:0] icmp11_fu_412_p2;
reg   [0:0] icmp11_reg_1692;
wire   [14:0] norm_V_load_9_1_1_fu_436_p3;
reg   [14:0] norm_V_load_9_1_1_reg_1698;
wire   [0:0] icmp14_fu_454_p2;
reg   [0:0] icmp14_reg_1704;
reg   [4:0] phitmp6125_i_1_reg_1710;
reg   [9:0] tmp_182_1_reg_1715;
reg   [9:0] tmp_182_1_reg_1715_pp0_iter1_reg;
reg   [9:0] tmp_182_1_reg_1715_pp0_iter2_reg;
reg  signed [9:0] tmp_182_1_reg_1715_pp0_iter3_reg;
wire   [0:0] icmp22_fu_500_p2;
reg   [0:0] icmp22_reg_1720;
wire   [14:0] norm_V_load_9_2_1_fu_524_p3;
reg   [14:0] norm_V_load_9_2_1_reg_1726;
wire   [0:0] icmp23_fu_542_p2;
reg   [0:0] icmp23_reg_1732;
reg   [4:0] phitmp6125_i_2_reg_1738;
reg   [9:0] tmp_182_2_reg_1743;
reg   [9:0] tmp_182_2_reg_1743_pp0_iter1_reg;
reg   [9:0] tmp_182_2_reg_1743_pp0_iter2_reg;
reg  signed [9:0] tmp_182_2_reg_1743_pp0_iter3_reg;
wire   [0:0] icmp25_fu_588_p2;
reg   [0:0] icmp25_reg_1748;
wire   [14:0] norm_V_load_9_3_1_fu_612_p3;
reg   [14:0] norm_V_load_9_3_1_reg_1754;
wire   [0:0] icmp26_fu_630_p2;
reg   [0:0] icmp26_reg_1760;
reg   [4:0] phitmp6125_i_3_reg_1766;
reg   [9:0] tmp_182_3_reg_1771;
reg   [9:0] tmp_182_3_reg_1771_pp0_iter1_reg;
reg   [9:0] tmp_182_3_reg_1771_pp0_iter2_reg;
reg  signed [9:0] tmp_182_3_reg_1771_pp0_iter3_reg;
wire   [4:0] tmp_68_fu_894_p2;
reg   [4:0] tmp_68_reg_1776;
reg   [3:0] tmp_69_reg_1781;
wire   [4:0] tmp_71_fu_1013_p2;
reg   [4:0] tmp_71_reg_1786;
reg   [3:0] tmp_72_reg_1791;
wire   [4:0] tmp_74_fu_1132_p2;
reg   [4:0] tmp_74_reg_1796;
reg   [3:0] tmp_75_reg_1801;
wire   [4:0] tmp_77_fu_1251_p2;
reg   [4:0] tmp_77_reg_1806;
reg   [3:0] tmp_78_reg_1811;
reg   [16:0] coarseContents_load_reg_1856;
reg   [16:0] coarseContents_load_reg_1856_pp0_iter4_reg;
reg   [16:0] coarseContents_load_reg_1856_pp0_iter5_reg;
reg   [12:0] gradientContents_loa_reg_1861;
reg   [16:0] coarseContents_load_1_reg_1866;
reg   [16:0] coarseContents_load_1_reg_1866_pp0_iter4_reg;
reg   [16:0] coarseContents_load_1_reg_1866_pp0_iter5_reg;
reg   [12:0] gradientContents_loa_7_reg_1871;
reg   [16:0] coarseContents_load_2_reg_1876;
reg   [16:0] coarseContents_load_2_reg_1876_pp0_iter4_reg;
reg   [16:0] coarseContents_load_2_reg_1876_pp0_iter5_reg;
reg   [12:0] gradientContents_loa_8_reg_1881;
reg   [16:0] coarseContents_load_3_reg_1886;
reg   [16:0] coarseContents_load_3_reg_1886_pp0_iter4_reg;
reg   [16:0] coarseContents_load_3_reg_1886_pp0_iter5_reg;
reg   [12:0] gradientContents_loa_9_reg_1891;
wire  signed [22:0] grp_fu_1627_p2;
reg  signed [22:0] r_V_s_reg_1936;
wire  signed [22:0] grp_fu_1633_p2;
reg  signed [22:0] r_V_68_1_reg_1941;
wire  signed [22:0] grp_fu_1639_p2;
reg  signed [22:0] r_V_68_2_reg_1946;
wire  signed [22:0] grp_fu_1645_p2;
reg  signed [22:0] r_V_68_3_reg_1951;
wire   [29:0] tmp1_fu_1518_p2;
reg   [29:0] tmp1_reg_1956;
wire   [29:0] tmp2_fu_1524_p2;
reg   [29:0] tmp2_reg_1961;
wire   [30:0] centralLimitNoise_V_fu_1540_p2;
reg  signed [30:0] centralLimitNoise_V_reg_1971;
reg   [16:0] scale_V_reg_1976;
wire   [47:0] grp_fu_1552_p2;
reg   [47:0] r_V_57_reg_1991;
wire   [48:0] r_V_fu_1561_p2;
reg   [48:0] r_V_reg_1996;
wire   [0:0] icmp28_fu_1587_p2;
reg   [0:0] icmp28_reg_2001;
wire   [0:0] tmp_61_fu_1593_p2;
reg   [0:0] tmp_61_reg_2007;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] tmp_55_fu_1272_p1;
wire   [63:0] tmp_183_1_fu_1284_p1;
wire   [63:0] tmp_183_2_fu_1296_p1;
wire   [63:0] tmp_183_3_fu_1308_p1;
wire   [63:0] tmp_58_fu_1530_p1;
wire   [127:0] p_Result_s_fu_776_p3;
wire   [7:0] tmp_130_fu_320_p4;
wire   [6:0] tmp_67_fu_336_p4;
wire   [14:0] tmp_s_fu_346_p3;
wire   [14:0] phitmp6128_i_fu_310_p4;
wire   [3:0] tmp_131_fu_362_p4;
wire   [7:0] tmp_140_fu_402_p4;
wire   [6:0] tmp_70_fu_418_p4;
wire   [14:0] tmp_210_1_fu_428_p3;
wire   [14:0] phitmp6128_i_1_fu_392_p4;
wire   [3:0] tmp_141_fu_444_p4;
wire   [7:0] tmp_149_fu_490_p4;
wire   [6:0] tmp_73_fu_506_p4;
wire   [14:0] tmp_210_2_fu_516_p3;
wire   [14:0] phitmp6128_i_2_fu_480_p4;
wire   [3:0] tmp_150_fu_532_p4;
wire   [7:0] tmp_158_fu_578_p4;
wire   [6:0] tmp_76_fu_594_p4;
wire   [14:0] tmp_210_3_fu_604_p3;
wire   [14:0] phitmp6128_i_3_fu_568_p4;
wire   [3:0] tmp_159_fu_620_p4;
wire   [29:0] tmp_79_fu_670_p4;
wire   [63:0] r_V_45_fu_680_p3;
wire   [63:0] rhs_V_fu_656_p4;
wire   [63:0] r_V_46_fu_688_p2;
wire   [28:0] r_V_32_fu_694_p4;
wire   [63:0] r_V_47_fu_704_p1;
wire   [63:0] r_V_48_fu_708_p2;
wire   [63:0] r_V_49_fu_714_p2;
wire   [5:0] tmp_168_fu_726_p1;
wire   [63:0] r_V_51_fu_730_p3;
wire   [63:0] rhs_V_14_fu_666_p1;
wire   [63:0] r_V_52_fu_738_p2;
wire   [50:0] r_V_38_fu_744_p4;
wire   [63:0] r_V_53_fu_754_p1;
wire   [63:0] r_V_54_fu_758_p2;
wire   [63:0] r_V_55_fu_764_p2;
wire   [63:0] r_V_50_fu_720_p2;
wire   [63:0] r_V_56_fu_770_p2;
wire   [8:0] bramChapter_V_load_3_fu_790_p3;
wire   [8:0] tmp_212_0_s_fu_797_p3;
wire   [14:0] tmp_132_fu_804_p2;
wire   [14:0] norm_V_load_9_0_2_fu_816_p3;
wire   [1:0] tmp_133_fu_822_p4;
wire   [8:0] bramChapter_V_load_3_1_fu_809_p3;
wire   [0:0] icmp7_fu_832_p2;
wire   [8:0] tmp_212_0_1_fu_838_p2;
wire   [0:0] tmp_134_fu_852_p3;
wire   [0:0] tmp_135_fu_860_p3;
wire   [8:0] bramChapter_V_load_3_2_fu_844_p3;
wire   [0:0] tmp_136_fu_868_p3;
wire   [8:0] tmp_212_0_3_fu_876_p2;
wire   [8:0] bramChapter_V_load_fu_882_p3;
wire   [4:0] tmp_137_fu_890_p1;
wire   [8:0] bramChapter_V_load_3_3_fu_909_p3;
wire   [8:0] tmp_212_1_s_fu_916_p3;
wire   [14:0] tmp_142_fu_923_p2;
wire   [14:0] norm_V_load_9_1_2_fu_935_p3;
wire   [1:0] tmp_143_fu_941_p4;
wire   [8:0] bramChapter_V_load_3_4_fu_928_p3;
wire   [0:0] icmp17_fu_951_p2;
wire   [8:0] tmp_212_1_1_fu_957_p2;
wire   [0:0] tmp_144_fu_971_p3;
wire   [0:0] tmp_145_fu_979_p3;
wire   [8:0] bramChapter_V_load_3_5_fu_963_p3;
wire   [0:0] tmp_146_fu_987_p3;
wire   [8:0] tmp_212_1_3_fu_995_p2;
wire   [8:0] bramChapter_V_load_1_fu_1001_p3;
wire   [4:0] tmp_147_fu_1009_p1;
wire   [8:0] bramChapter_V_load_3_6_fu_1028_p3;
wire   [8:0] tmp_212_2_s_fu_1035_p3;
wire   [14:0] tmp_151_fu_1042_p2;
wire   [14:0] norm_V_load_9_2_2_fu_1054_p3;
wire   [1:0] tmp_152_fu_1060_p4;
wire   [8:0] bramChapter_V_load_3_7_fu_1047_p3;
wire   [0:0] icmp24_fu_1070_p2;
wire   [8:0] tmp_212_2_1_fu_1076_p2;
wire   [0:0] tmp_153_fu_1090_p3;
wire   [0:0] tmp_154_fu_1098_p3;
wire   [8:0] bramChapter_V_load_3_8_fu_1082_p3;
wire   [0:0] tmp_155_fu_1106_p3;
wire   [8:0] tmp_212_2_3_fu_1114_p2;
wire   [8:0] bramChapter_V_load_2_fu_1120_p3;
wire   [4:0] tmp_156_fu_1128_p1;
wire   [8:0] bramChapter_V_load_3_9_fu_1147_p3;
wire   [8:0] tmp_212_3_s_fu_1154_p3;
wire   [14:0] tmp_160_fu_1161_p2;
wire   [14:0] norm_V_load_9_3_2_fu_1173_p3;
wire   [1:0] tmp_161_fu_1179_p4;
wire   [8:0] bramChapter_V_load_3_11_fu_1166_p3;
wire   [0:0] icmp27_fu_1189_p2;
wire   [8:0] tmp_212_3_1_fu_1195_p2;
wire   [0:0] tmp_162_fu_1209_p3;
wire   [0:0] tmp_163_fu_1217_p3;
wire   [8:0] bramChapter_V_load_3_10_fu_1201_p3;
wire   [0:0] tmp_164_fu_1225_p3;
wire   [8:0] tmp_212_3_3_fu_1233_p2;
wire   [8:0] bramChapter_V_load_s_fu_1239_p3;
wire   [4:0] tmp_165_fu_1247_p1;
wire   [8:0] tmp_53_fu_1266_p3;
wire   [8:0] tmp_181_1_fu_1278_p3;
wire   [8:0] tmp_181_2_fu_1290_p3;
wire   [8:0] tmp_181_3_fu_1302_p3;
wire   [26:0] r_V_29_fu_1348_p3;
wire  signed [28:0] tmp_56_fu_1345_p1;
wire   [28:0] r_V_29_cast_fu_1355_p1;
wire   [0:0] tmp_129_fu_1338_p3;
wire   [28:0] tmp_57_fu_1359_p2;
wire   [28:0] addconv_i_fu_1365_p2;
wire   [26:0] r_V_69_1_fu_1389_p3;
wire  signed [28:0] tmp_184_1_fu_1386_p1;
wire   [28:0] r_V_69_1_cast_fu_1396_p1;
wire   [0:0] tmp_139_fu_1379_p3;
wire   [28:0] tmp_190_1_fu_1400_p2;
wire   [28:0] addconv_i_1_fu_1406_p2;
wire   [26:0] r_V_69_2_fu_1430_p3;
wire  signed [28:0] tmp_184_2_fu_1427_p1;
wire   [28:0] r_V_69_2_cast_fu_1437_p1;
wire   [0:0] tmp_148_fu_1420_p3;
wire   [28:0] tmp_190_2_fu_1441_p2;
wire   [28:0] addconv_i_2_fu_1447_p2;
wire   [26:0] r_V_69_3_fu_1471_p3;
wire  signed [28:0] tmp_184_3_fu_1468_p1;
wire   [28:0] r_V_69_3_cast_fu_1478_p1;
wire   [0:0] tmp_157_fu_1461_p3;
wire   [28:0] tmp_190_3_fu_1482_p2;
wire   [28:0] addconv_i_3_fu_1488_p2;
wire   [28:0] noiseGen_V_load_fu_1371_p3;
wire   [28:0] noiseGen_V_load_7_fu_1412_p3;
wire   [28:0] noiseGen_V_load_8_fu_1453_p3;
wire   [28:0] noiseGen_V_load_9_fu_1494_p3;
wire  signed [29:0] p_0210_0_i_cast_fu_1506_p1;
wire  signed [29:0] p_0202_0_i_cast_fu_1502_p1;
wire  signed [29:0] tmp_cast_fu_1510_p1;
wire  signed [29:0] tmp_cast_21_fu_1514_p1;
wire  signed [30:0] tmp2_cast_fu_1537_p1;
wire  signed [30:0] tmp1_cast_fu_1534_p1;
wire   [16:0] grp_fu_1552_p1;
wire   [48:0] tmp_59_fu_1558_p1;
wire   [3:0] tmp_170_fu_1577_p4;
wire   [20:0] roundedNoise_V_fu_1567_p4;
wire   [0:0] tmp_fu_1615_p2;
wire   [17:0] saturatedNoise_V_3_fu_1608_p3;
wire   [17:0] saturatedNoise_V_fu_1599_p4;
wire   [12:0] grp_fu_1627_p0;
wire   [12:0] grp_fu_1633_p0;
wire   [12:0] grp_fu_1639_p0;
wire   [12:0] grp_fu_1645_p0;
reg    grp_fu_1552_ce;
reg    grp_fu_1627_ce;
reg    grp_fu_1633_ce;
reg    grp_fu_1639_ce;
reg    grp_fu_1645_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to14;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [47:0] grp_fu_1552_p10;
wire   [22:0] grp_fu_1627_p00;
wire   [22:0] grp_fu_1633_p00;
wire   [22:0] grp_fu_1639_p00;
wire   [22:0] grp_fu_1645_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 chan_real_noise2_lfs = 128'd195524338513504868052069430947030013780;
end

awgn_real1_coarseg8j #(
    .DataWidth( 17 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
coarseContents_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(coarseContents_address0),
    .ce0(coarseContents_ce0),
    .q0(coarseContents_q0),
    .address1(coarseContents_address1),
    .ce1(coarseContents_ce1),
    .q1(coarseContents_q1),
    .address2(coarseContents_address2),
    .ce2(coarseContents_ce2),
    .q2(coarseContents_q2),
    .address3(coarseContents_address3),
    .ce3(coarseContents_ce3),
    .q3(coarseContents_q3)
);

awgn_real1_gradiehbi #(
    .DataWidth( 13 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
gradientContents_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(gradientContents_address0),
    .ce0(gradientContents_ce0),
    .q0(gradientContents_q0),
    .address1(gradientContents_address1),
    .ce1(gradientContents_ce1),
    .q1(gradientContents_q1),
    .address2(gradientContents_address2),
    .ce2(gradientContents_ce2),
    .q2(gradientContents_q2),
    .address3(gradientContents_address3),
    .ce3(gradientContents_ce3),
    .q3(gradientContents_q3)
);

awgn_real1_scaleLibs #(
    .DataWidth( 17 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
scaleLookup_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(scaleLookup_address0),
    .ce0(scaleLookup_ce0),
    .q0(scaleLookup_q0)
);

mod_and_chan_4x_mjbC #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 48 ))
mod_and_chan_4x_mjbC_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(centralLimitNoise_V_reg_1971),
    .din1(grp_fu_1552_p1),
    .ce(grp_fu_1552_ce),
    .dout(grp_fu_1552_p2)
);

mod_and_chan_4x_mkbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 23 ))
mod_and_chan_4x_mkbM_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1627_p0),
    .din1(tmp_138_reg_1687_pp0_iter3_reg),
    .ce(grp_fu_1627_ce),
    .dout(grp_fu_1627_p2)
);

mod_and_chan_4x_mkbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 23 ))
mod_and_chan_4x_mkbM_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1633_p0),
    .din1(tmp_182_1_reg_1715_pp0_iter3_reg),
    .ce(grp_fu_1633_ce),
    .dout(grp_fu_1633_p2)
);

mod_and_chan_4x_mkbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 23 ))
mod_and_chan_4x_mkbM_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1639_p0),
    .din1(tmp_182_2_reg_1743_pp0_iter3_reg),
    .ce(grp_fu_1639_ce),
    .dout(grp_fu_1639_p2)
);

mod_and_chan_4x_mkbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 23 ))
mod_and_chan_4x_mkbM_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1645_p0),
    .din1(tmp_182_3_reg_1771_pp0_iter3_reg),
    .ce(grp_fu_1645_ce),
    .dout(grp_fu_1645_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        chan_real_noise2_lfs <= 128'd195524338513504868052069430947030013780;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
            chan_real_noise2_lfs <= p_Result_s_fu_776_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        centralLimitNoise_V_reg_1971 <= centralLimitNoise_V_fu_1540_p2;
        coarseContents_load_1_reg_1866_pp0_iter4_reg <= coarseContents_load_1_reg_1866;
        coarseContents_load_1_reg_1866_pp0_iter5_reg <= coarseContents_load_1_reg_1866_pp0_iter4_reg;
        coarseContents_load_2_reg_1876_pp0_iter4_reg <= coarseContents_load_2_reg_1876;
        coarseContents_load_2_reg_1876_pp0_iter5_reg <= coarseContents_load_2_reg_1876_pp0_iter4_reg;
        coarseContents_load_3_reg_1886_pp0_iter4_reg <= coarseContents_load_3_reg_1886;
        coarseContents_load_3_reg_1886_pp0_iter5_reg <= coarseContents_load_3_reg_1886_pp0_iter4_reg;
        coarseContents_load_reg_1856_pp0_iter4_reg <= coarseContents_load_reg_1856;
        coarseContents_load_reg_1856_pp0_iter5_reg <= coarseContents_load_reg_1856_pp0_iter4_reg;
        icmp28_reg_2001 <= icmp28_fu_1587_p2;
        p_Val2_s_reg_1656_pp0_iter2_reg <= p_Val2_s_reg_1656_pp0_iter1_reg;
        p_Val2_s_reg_1656_pp0_iter3_reg <= p_Val2_s_reg_1656_pp0_iter2_reg;
        p_Val2_s_reg_1656_pp0_iter4_reg <= p_Val2_s_reg_1656_pp0_iter3_reg;
        p_Val2_s_reg_1656_pp0_iter5_reg <= p_Val2_s_reg_1656_pp0_iter4_reg;
        r_V_57_reg_1991 <= grp_fu_1552_p2;
        r_V_68_1_reg_1941 <= grp_fu_1633_p2;
        r_V_68_2_reg_1946 <= grp_fu_1639_p2;
        r_V_68_3_reg_1951 <= grp_fu_1645_p2;
        r_V_reg_1996 <= r_V_fu_1561_p2;
        r_V_s_reg_1936 <= grp_fu_1627_p2;
        scale_V_reg_1976 <= scaleLookup_q0;
        snr_V_read_reg_1651_pp0_iter2_reg <= snr_V_read_reg_1651_pp0_iter1_reg;
        snr_V_read_reg_1651_pp0_iter3_reg <= snr_V_read_reg_1651_pp0_iter2_reg;
        snr_V_read_reg_1651_pp0_iter4_reg <= snr_V_read_reg_1651_pp0_iter3_reg;
        snr_V_read_reg_1651_pp0_iter5_reg <= snr_V_read_reg_1651_pp0_iter4_reg;
        tmp1_reg_1956 <= tmp1_fu_1518_p2;
        tmp2_reg_1961 <= tmp2_fu_1524_p2;
        tmp_138_reg_1687_pp0_iter2_reg <= tmp_138_reg_1687_pp0_iter1_reg;
        tmp_138_reg_1687_pp0_iter3_reg <= tmp_138_reg_1687_pp0_iter2_reg;
        tmp_182_1_reg_1715_pp0_iter2_reg <= tmp_182_1_reg_1715_pp0_iter1_reg;
        tmp_182_1_reg_1715_pp0_iter3_reg <= tmp_182_1_reg_1715_pp0_iter2_reg;
        tmp_182_2_reg_1743_pp0_iter2_reg <= tmp_182_2_reg_1743_pp0_iter1_reg;
        tmp_182_2_reg_1743_pp0_iter3_reg <= tmp_182_2_reg_1743_pp0_iter2_reg;
        tmp_182_3_reg_1771_pp0_iter2_reg <= tmp_182_3_reg_1771_pp0_iter1_reg;
        tmp_182_3_reg_1771_pp0_iter3_reg <= tmp_182_3_reg_1771_pp0_iter2_reg;
        tmp_61_reg_2007 <= tmp_61_fu_1593_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_ce))) begin
        coarseContents_load_1_reg_1866 <= coarseContents_q1;
        coarseContents_load_2_reg_1876 <= coarseContents_q2;
        coarseContents_load_3_reg_1886 <= coarseContents_q3;
        coarseContents_load_reg_1856 <= coarseContents_q0;
        gradientContents_loa_7_reg_1871 <= gradientContents_q1;
        gradientContents_loa_8_reg_1881 <= gradientContents_q2;
        gradientContents_loa_9_reg_1891 <= gradientContents_q3;
        gradientContents_loa_reg_1861 <= gradientContents_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        icmp11_reg_1692 <= icmp11_fu_412_p2;
        icmp14_reg_1704 <= icmp14_fu_454_p2;
        icmp22_reg_1720 <= icmp22_fu_500_p2;
        icmp23_reg_1732 <= icmp23_fu_542_p2;
        icmp25_reg_1748 <= icmp25_fu_588_p2;
        icmp26_reg_1760 <= icmp26_fu_630_p2;
        icmp4_reg_1676 <= icmp4_fu_372_p2;
        icmp_reg_1664 <= icmp_fu_330_p2;
        norm_V_load_9_0_1_reg_1670 <= norm_V_load_9_0_1_fu_354_p3;
        norm_V_load_9_1_1_reg_1698 <= norm_V_load_9_1_1_fu_436_p3;
        norm_V_load_9_2_1_reg_1726 <= norm_V_load_9_2_1_fu_524_p3;
        norm_V_load_9_3_1_reg_1754 <= norm_V_load_9_3_1_fu_612_p3;
        p_Val2_s_reg_1656 <= chan_real_noise2_lfs;
        p_Val2_s_reg_1656_pp0_iter1_reg <= p_Val2_s_reg_1656;
        phitmp6125_i_1_reg_1710 <= {{chan_real_noise2_lfs[46:42]}};
        phitmp6125_i_2_reg_1738 <= {{chan_real_noise2_lfs[78:74]}};
        phitmp6125_i_3_reg_1766 <= {{chan_real_noise2_lfs[110:106]}};
        phitmp6125_i_reg_1682 <= {{chan_real_noise2_lfs[14:10]}};
        snr_V_read_reg_1651 <= snr_V;
        snr_V_read_reg_1651_pp0_iter1_reg <= snr_V_read_reg_1651;
        tmp_138_reg_1687 <= tmp_138_fu_388_p1;
        tmp_138_reg_1687_pp0_iter1_reg <= tmp_138_reg_1687;
        tmp_182_1_reg_1715 <= {{chan_real_noise2_lfs[41:32]}};
        tmp_182_1_reg_1715_pp0_iter1_reg <= tmp_182_1_reg_1715;
        tmp_182_2_reg_1743 <= {{chan_real_noise2_lfs[73:64]}};
        tmp_182_2_reg_1743_pp0_iter1_reg <= tmp_182_2_reg_1743;
        tmp_182_3_reg_1771 <= {{chan_real_noise2_lfs[105:96]}};
        tmp_182_3_reg_1771_pp0_iter1_reg <= tmp_182_3_reg_1771;
        tmp_68_reg_1776 <= tmp_68_fu_894_p2;
        tmp_69_reg_1781 <= {{bramChapter_V_load_fu_882_p3[8:5]}};
        tmp_71_reg_1786 <= tmp_71_fu_1013_p2;
        tmp_72_reg_1791 <= {{bramChapter_V_load_1_fu_1001_p3[8:5]}};
        tmp_74_reg_1796 <= tmp_74_fu_1132_p2;
        tmp_75_reg_1801 <= {{bramChapter_V_load_2_fu_1120_p3[8:5]}};
        tmp_77_reg_1806 <= tmp_77_fu_1251_p2;
        tmp_78_reg_1811 <= {{bramChapter_V_load_s_fu_1239_p3[8:5]}};
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_ce)) | ((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to14 = 1'b1;
    end else begin
        ap_idle_pp0_0to14 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce))) begin
        coarseContents_ce0 = 1'b1;
    end else begin
        coarseContents_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce))) begin
        coarseContents_ce1 = 1'b1;
    end else begin
        coarseContents_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce))) begin
        coarseContents_ce2 = 1'b1;
    end else begin
        coarseContents_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce))) begin
        coarseContents_ce3 = 1'b1;
    end else begin
        coarseContents_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce))) begin
        gradientContents_ce0 = 1'b1;
    end else begin
        gradientContents_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce))) begin
        gradientContents_ce1 = 1'b1;
    end else begin
        gradientContents_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce))) begin
        gradientContents_ce2 = 1'b1;
    end else begin
        gradientContents_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce))) begin
        gradientContents_ce3 = 1'b1;
    end else begin
        gradientContents_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        grp_fu_1552_ce = 1'b1;
    end else begin
        grp_fu_1552_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        grp_fu_1627_ce = 1'b1;
    end else begin
        grp_fu_1627_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        grp_fu_1633_ce = 1'b1;
    end else begin
        grp_fu_1633_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        grp_fu_1639_ce = 1'b1;
    end else begin
        grp_fu_1639_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        grp_fu_1645_ce = 1'b1;
    end else begin
        grp_fu_1645_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_ce))) begin
        scaleLookup_ce0 = 1'b1;
    end else begin
        scaleLookup_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign addconv_i_1_fu_1406_p2 = ($signed(r_V_69_1_cast_fu_1396_p1) + $signed(tmp_184_1_fu_1386_p1));

assign addconv_i_2_fu_1447_p2 = ($signed(r_V_69_2_cast_fu_1437_p1) + $signed(tmp_184_2_fu_1427_p1));

assign addconv_i_3_fu_1488_p2 = ($signed(r_V_69_3_cast_fu_1478_p1) + $signed(tmp_184_3_fu_1468_p1));

assign addconv_i_fu_1365_p2 = ($signed(r_V_29_cast_fu_1355_p1) + $signed(tmp_56_fu_1345_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = ((tmp_fu_1615_p2[0:0] === 1'b1) ? saturatedNoise_V_3_fu_1608_p3 : saturatedNoise_V_fu_1599_p4);

assign bramChapter_V_load_1_fu_1001_p3 = ((tmp_146_fu_987_p3[0:0] === 1'b1) ? tmp_212_1_3_fu_995_p2 : bramChapter_V_load_3_5_fu_963_p3);

assign bramChapter_V_load_2_fu_1120_p3 = ((tmp_155_fu_1106_p3[0:0] === 1'b1) ? tmp_212_2_3_fu_1114_p2 : bramChapter_V_load_3_8_fu_1082_p3);

assign bramChapter_V_load_3_10_fu_1201_p3 = ((icmp27_fu_1189_p2[0:0] === 1'b1) ? bramChapter_V_load_3_11_fu_1166_p3 : tmp_212_3_1_fu_1195_p2);

assign bramChapter_V_load_3_11_fu_1166_p3 = ((icmp26_reg_1760[0:0] === 1'b1) ? bramChapter_V_load_3_9_fu_1147_p3 : tmp_212_3_s_fu_1154_p3);

assign bramChapter_V_load_3_1_fu_809_p3 = ((icmp4_reg_1676[0:0] === 1'b1) ? bramChapter_V_load_3_fu_790_p3 : tmp_212_0_s_fu_797_p3);

assign bramChapter_V_load_3_2_fu_844_p3 = ((icmp7_fu_832_p2[0:0] === 1'b1) ? bramChapter_V_load_3_1_fu_809_p3 : tmp_212_0_1_fu_838_p2);

assign bramChapter_V_load_3_3_fu_909_p3 = ((icmp11_reg_1692[0:0] === 1'b1) ? 9'd0 : 9'd256);

assign bramChapter_V_load_3_4_fu_928_p3 = ((icmp14_reg_1704[0:0] === 1'b1) ? bramChapter_V_load_3_3_fu_909_p3 : tmp_212_1_s_fu_916_p3);

assign bramChapter_V_load_3_5_fu_963_p3 = ((icmp17_fu_951_p2[0:0] === 1'b1) ? bramChapter_V_load_3_4_fu_928_p3 : tmp_212_1_1_fu_957_p2);

assign bramChapter_V_load_3_6_fu_1028_p3 = ((icmp22_reg_1720[0:0] === 1'b1) ? 9'd0 : 9'd256);

assign bramChapter_V_load_3_7_fu_1047_p3 = ((icmp23_reg_1732[0:0] === 1'b1) ? bramChapter_V_load_3_6_fu_1028_p3 : tmp_212_2_s_fu_1035_p3);

assign bramChapter_V_load_3_8_fu_1082_p3 = ((icmp24_fu_1070_p2[0:0] === 1'b1) ? bramChapter_V_load_3_7_fu_1047_p3 : tmp_212_2_1_fu_1076_p2);

assign bramChapter_V_load_3_9_fu_1147_p3 = ((icmp25_reg_1748[0:0] === 1'b1) ? 9'd0 : 9'd256);

assign bramChapter_V_load_3_fu_790_p3 = ((icmp_reg_1664[0:0] === 1'b1) ? 9'd0 : 9'd256);

assign bramChapter_V_load_fu_882_p3 = ((tmp_136_fu_868_p3[0:0] === 1'b1) ? tmp_212_0_3_fu_876_p2 : bramChapter_V_load_3_2_fu_844_p3);

assign bramChapter_V_load_s_fu_1239_p3 = ((tmp_164_fu_1225_p3[0:0] === 1'b1) ? tmp_212_3_3_fu_1233_p2 : bramChapter_V_load_3_10_fu_1201_p3);

assign centralLimitNoise_V_fu_1540_p2 = ($signed(tmp2_cast_fu_1537_p1) + $signed(tmp1_cast_fu_1534_p1));

assign coarseContents_address0 = tmp_55_fu_1272_p1;

assign coarseContents_address1 = tmp_183_1_fu_1284_p1;

assign coarseContents_address2 = tmp_183_2_fu_1296_p1;

assign coarseContents_address3 = tmp_183_3_fu_1308_p1;

assign gradientContents_address0 = tmp_55_fu_1272_p1;

assign gradientContents_address1 = tmp_183_1_fu_1284_p1;

assign gradientContents_address2 = tmp_183_2_fu_1296_p1;

assign gradientContents_address3 = tmp_183_3_fu_1308_p1;

assign grp_fu_1552_p1 = grp_fu_1552_p10;

assign grp_fu_1552_p10 = scale_V_reg_1976;

assign grp_fu_1627_p0 = grp_fu_1627_p00;

assign grp_fu_1627_p00 = gradientContents_loa_reg_1861;

assign grp_fu_1633_p0 = grp_fu_1633_p00;

assign grp_fu_1633_p00 = gradientContents_loa_7_reg_1871;

assign grp_fu_1639_p0 = grp_fu_1639_p00;

assign grp_fu_1639_p00 = gradientContents_loa_8_reg_1881;

assign grp_fu_1645_p0 = grp_fu_1645_p00;

assign grp_fu_1645_p00 = gradientContents_loa_9_reg_1891;

assign icmp11_fu_412_p2 = ((tmp_140_fu_402_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp14_fu_454_p2 = ((tmp_141_fu_444_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp17_fu_951_p2 = ((tmp_143_fu_941_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp22_fu_500_p2 = ((tmp_149_fu_490_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp23_fu_542_p2 = ((tmp_150_fu_532_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp24_fu_1070_p2 = ((tmp_152_fu_1060_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp25_fu_588_p2 = ((tmp_158_fu_578_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp26_fu_630_p2 = ((tmp_159_fu_620_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp27_fu_1189_p2 = ((tmp_161_fu_1179_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp28_fu_1587_p2 = (($signed(tmp_170_fu_1577_p4) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign icmp4_fu_372_p2 = ((tmp_131_fu_362_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp7_fu_832_p2 = ((tmp_133_fu_822_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_fu_330_p2 = ((tmp_130_fu_320_p4 == 8'd0) ? 1'b1 : 1'b0);

assign noiseGen_V_load_7_fu_1412_p3 = ((tmp_139_fu_1379_p3[0:0] === 1'b1) ? tmp_190_1_fu_1400_p2 : addconv_i_1_fu_1406_p2);

assign noiseGen_V_load_8_fu_1453_p3 = ((tmp_148_fu_1420_p3[0:0] === 1'b1) ? tmp_190_2_fu_1441_p2 : addconv_i_2_fu_1447_p2);

assign noiseGen_V_load_9_fu_1494_p3 = ((tmp_157_fu_1461_p3[0:0] === 1'b1) ? tmp_190_3_fu_1482_p2 : addconv_i_3_fu_1488_p2);

assign noiseGen_V_load_fu_1371_p3 = ((tmp_129_fu_1338_p3[0:0] === 1'b1) ? tmp_57_fu_1359_p2 : addconv_i_fu_1365_p2);

assign norm_V_load_9_0_1_fu_354_p3 = ((icmp_fu_330_p2[0:0] === 1'b1) ? tmp_s_fu_346_p3 : phitmp6128_i_fu_310_p4);

assign norm_V_load_9_0_2_fu_816_p3 = ((icmp4_reg_1676[0:0] === 1'b1) ? tmp_132_fu_804_p2 : norm_V_load_9_0_1_reg_1670);

assign norm_V_load_9_1_1_fu_436_p3 = ((icmp11_fu_412_p2[0:0] === 1'b1) ? tmp_210_1_fu_428_p3 : phitmp6128_i_1_fu_392_p4);

assign norm_V_load_9_1_2_fu_935_p3 = ((icmp14_reg_1704[0:0] === 1'b1) ? tmp_142_fu_923_p2 : norm_V_load_9_1_1_reg_1698);

assign norm_V_load_9_2_1_fu_524_p3 = ((icmp22_fu_500_p2[0:0] === 1'b1) ? tmp_210_2_fu_516_p3 : phitmp6128_i_2_fu_480_p4);

assign norm_V_load_9_2_2_fu_1054_p3 = ((icmp23_reg_1732[0:0] === 1'b1) ? tmp_151_fu_1042_p2 : norm_V_load_9_2_1_reg_1726);

assign norm_V_load_9_3_1_fu_612_p3 = ((icmp25_fu_588_p2[0:0] === 1'b1) ? tmp_210_3_fu_604_p3 : phitmp6128_i_3_fu_568_p4);

assign norm_V_load_9_3_2_fu_1173_p3 = ((icmp26_reg_1760[0:0] === 1'b1) ? tmp_160_fu_1161_p2 : norm_V_load_9_3_1_reg_1754);

assign p_0202_0_i_cast_fu_1502_p1 = $signed(noiseGen_V_load_fu_1371_p3);

assign p_0210_0_i_cast_fu_1506_p1 = $signed(noiseGen_V_load_7_fu_1412_p3);

assign p_Result_s_fu_776_p3 = {{r_V_50_fu_720_p2}, {r_V_56_fu_770_p2}};

assign phitmp6128_i_1_fu_392_p4 = {{chan_real_noise2_lfs[61:47]}};

assign phitmp6128_i_2_fu_480_p4 = {{chan_real_noise2_lfs[93:79]}};

assign phitmp6128_i_3_fu_568_p4 = {{chan_real_noise2_lfs[125:111]}};

assign phitmp6128_i_fu_310_p4 = {{chan_real_noise2_lfs[29:15]}};

assign r_V_29_cast_fu_1355_p1 = r_V_29_fu_1348_p3;

assign r_V_29_fu_1348_p3 = {{coarseContents_load_reg_1856_pp0_iter5_reg}, {10'd0}};

assign r_V_32_fu_694_p4 = {{r_V_46_fu_688_p2[63:35]}};

assign r_V_38_fu_744_p4 = {{r_V_52_fu_738_p2[63:13]}};

assign r_V_45_fu_680_p3 = {{tmp_79_fu_670_p4}, {34'd0}};

assign r_V_46_fu_688_p2 = (rhs_V_fu_656_p4 ^ r_V_45_fu_680_p3);

assign r_V_47_fu_704_p1 = r_V_32_fu_694_p4;

assign r_V_48_fu_708_p2 = (r_V_47_fu_704_p1 ^ r_V_46_fu_688_p2);

assign r_V_49_fu_714_p2 = r_V_48_fu_708_p2 << 64'd1;

assign r_V_50_fu_720_p2 = (r_V_49_fu_714_p2 ^ r_V_48_fu_708_p2);

assign r_V_51_fu_730_p3 = {{tmp_168_fu_726_p1}, {58'd0}};

assign r_V_52_fu_738_p2 = (rhs_V_14_fu_666_p1 ^ r_V_51_fu_730_p3);

assign r_V_53_fu_754_p1 = r_V_38_fu_744_p4;

assign r_V_54_fu_758_p2 = (r_V_53_fu_754_p1 ^ r_V_52_fu_738_p2);

assign r_V_55_fu_764_p2 = r_V_54_fu_758_p2 << 64'd7;

assign r_V_56_fu_770_p2 = (r_V_55_fu_764_p2 ^ r_V_54_fu_758_p2);

assign r_V_69_1_cast_fu_1396_p1 = r_V_69_1_fu_1389_p3;

assign r_V_69_1_fu_1389_p3 = {{coarseContents_load_1_reg_1866_pp0_iter5_reg}, {10'd0}};

assign r_V_69_2_cast_fu_1437_p1 = r_V_69_2_fu_1430_p3;

assign r_V_69_2_fu_1430_p3 = {{coarseContents_load_2_reg_1876_pp0_iter5_reg}, {10'd0}};

assign r_V_69_3_cast_fu_1478_p1 = r_V_69_3_fu_1471_p3;

assign r_V_69_3_fu_1471_p3 = {{coarseContents_load_3_reg_1886_pp0_iter5_reg}, {10'd0}};

assign r_V_fu_1561_p2 = (49'd67108864 + tmp_59_fu_1558_p1);

assign rhs_V_14_fu_666_p1 = chan_real_noise2_lfs[63:0];

assign rhs_V_fu_656_p4 = {{chan_real_noise2_lfs[127:64]}};

assign roundedNoise_V_fu_1567_p4 = {{r_V_fu_1561_p2[47:27]}};

assign saturatedNoise_V_3_fu_1608_p3 = ((icmp28_reg_2001[0:0] === 1'b1) ? 18'd131071 : 18'd131073);

assign saturatedNoise_V_fu_1599_p4 = {{r_V_reg_1996[44:27]}};

assign scaleLookup_address0 = tmp_58_fu_1530_p1;

assign tmp1_cast_fu_1534_p1 = $signed(tmp1_reg_1956);

assign tmp1_fu_1518_p2 = ($signed(p_0210_0_i_cast_fu_1506_p1) + $signed(p_0202_0_i_cast_fu_1502_p1));

assign tmp2_cast_fu_1537_p1 = $signed(tmp2_reg_1961);

assign tmp2_fu_1524_p2 = ($signed(tmp_cast_fu_1510_p1) + $signed(tmp_cast_21_fu_1514_p1));

assign tmp_129_fu_1338_p3 = p_Val2_s_reg_1656_pp0_iter5_reg[32'd31];

assign tmp_130_fu_320_p4 = {{chan_real_noise2_lfs[29:22]}};

assign tmp_131_fu_362_p4 = {{norm_V_load_9_0_1_fu_354_p3[14:11]}};

assign tmp_132_fu_804_p2 = norm_V_load_9_0_1_reg_1670 << 15'd4;

assign tmp_133_fu_822_p4 = {{norm_V_load_9_0_2_fu_816_p3[14:13]}};

assign tmp_134_fu_852_p3 = norm_V_load_9_0_2_fu_816_p3[32'd12];

assign tmp_135_fu_860_p3 = norm_V_load_9_0_2_fu_816_p3[32'd14];

assign tmp_136_fu_868_p3 = ((icmp7_fu_832_p2[0:0] === 1'b1) ? tmp_134_fu_852_p3 : tmp_135_fu_860_p3);

assign tmp_137_fu_890_p1 = bramChapter_V_load_fu_882_p3[4:0];

assign tmp_138_fu_388_p1 = chan_real_noise2_lfs[9:0];

assign tmp_139_fu_1379_p3 = p_Val2_s_reg_1656_pp0_iter5_reg[32'd63];

assign tmp_140_fu_402_p4 = {{chan_real_noise2_lfs[61:54]}};

assign tmp_141_fu_444_p4 = {{norm_V_load_9_1_1_fu_436_p3[14:11]}};

assign tmp_142_fu_923_p2 = norm_V_load_9_1_1_reg_1698 << 15'd4;

assign tmp_143_fu_941_p4 = {{norm_V_load_9_1_2_fu_935_p3[14:13]}};

assign tmp_144_fu_971_p3 = norm_V_load_9_1_2_fu_935_p3[32'd12];

assign tmp_145_fu_979_p3 = norm_V_load_9_1_2_fu_935_p3[32'd14];

assign tmp_146_fu_987_p3 = ((icmp17_fu_951_p2[0:0] === 1'b1) ? tmp_144_fu_971_p3 : tmp_145_fu_979_p3);

assign tmp_147_fu_1009_p1 = bramChapter_V_load_1_fu_1001_p3[4:0];

assign tmp_148_fu_1420_p3 = p_Val2_s_reg_1656_pp0_iter5_reg[32'd95];

assign tmp_149_fu_490_p4 = {{chan_real_noise2_lfs[93:86]}};

assign tmp_150_fu_532_p4 = {{norm_V_load_9_2_1_fu_524_p3[14:11]}};

assign tmp_151_fu_1042_p2 = norm_V_load_9_2_1_reg_1726 << 15'd4;

assign tmp_152_fu_1060_p4 = {{norm_V_load_9_2_2_fu_1054_p3[14:13]}};

assign tmp_153_fu_1090_p3 = norm_V_load_9_2_2_fu_1054_p3[32'd12];

assign tmp_154_fu_1098_p3 = norm_V_load_9_2_2_fu_1054_p3[32'd14];

assign tmp_155_fu_1106_p3 = ((icmp24_fu_1070_p2[0:0] === 1'b1) ? tmp_153_fu_1090_p3 : tmp_154_fu_1098_p3);

assign tmp_156_fu_1128_p1 = bramChapter_V_load_2_fu_1120_p3[4:0];

assign tmp_157_fu_1461_p3 = p_Val2_s_reg_1656_pp0_iter5_reg[32'd127];

assign tmp_158_fu_578_p4 = {{chan_real_noise2_lfs[125:118]}};

assign tmp_159_fu_620_p4 = {{norm_V_load_9_3_1_fu_612_p3[14:11]}};

assign tmp_160_fu_1161_p2 = norm_V_load_9_3_1_reg_1754 << 15'd4;

assign tmp_161_fu_1179_p4 = {{norm_V_load_9_3_2_fu_1173_p3[14:13]}};

assign tmp_162_fu_1209_p3 = norm_V_load_9_3_2_fu_1173_p3[32'd12];

assign tmp_163_fu_1217_p3 = norm_V_load_9_3_2_fu_1173_p3[32'd14];

assign tmp_164_fu_1225_p3 = ((icmp27_fu_1189_p2[0:0] === 1'b1) ? tmp_162_fu_1209_p3 : tmp_163_fu_1217_p3);

assign tmp_165_fu_1247_p1 = bramChapter_V_load_s_fu_1239_p3[4:0];

assign tmp_168_fu_726_p1 = chan_real_noise2_lfs[5:0];

assign tmp_170_fu_1577_p4 = {{r_V_fu_1561_p2[47:44]}};

assign tmp_181_1_fu_1278_p3 = {{tmp_72_reg_1791}, {tmp_71_reg_1786}};

assign tmp_181_2_fu_1290_p3 = {{tmp_75_reg_1801}, {tmp_74_reg_1796}};

assign tmp_181_3_fu_1302_p3 = {{tmp_78_reg_1811}, {tmp_77_reg_1806}};

assign tmp_183_1_fu_1284_p1 = tmp_181_1_fu_1278_p3;

assign tmp_183_2_fu_1296_p1 = tmp_181_2_fu_1290_p3;

assign tmp_183_3_fu_1308_p1 = tmp_181_3_fu_1302_p3;

assign tmp_184_1_fu_1386_p1 = r_V_68_1_reg_1941;

assign tmp_184_2_fu_1427_p1 = r_V_68_2_reg_1946;

assign tmp_184_3_fu_1468_p1 = r_V_68_3_reg_1951;

assign tmp_190_1_fu_1400_p2 = ($signed(tmp_184_1_fu_1386_p1) - $signed(r_V_69_1_cast_fu_1396_p1));

assign tmp_190_2_fu_1441_p2 = ($signed(tmp_184_2_fu_1427_p1) - $signed(r_V_69_2_cast_fu_1437_p1));

assign tmp_190_3_fu_1482_p2 = ($signed(tmp_184_3_fu_1468_p1) - $signed(r_V_69_3_cast_fu_1478_p1));

assign tmp_210_1_fu_428_p3 = {{tmp_70_fu_418_p4}, {8'd0}};

assign tmp_210_2_fu_516_p3 = {{tmp_73_fu_506_p4}, {8'd0}};

assign tmp_210_3_fu_604_p3 = {{tmp_76_fu_594_p4}, {8'd0}};

assign tmp_212_0_1_fu_838_p2 = (bramChapter_V_load_3_1_fu_809_p3 | 9'd64);

assign tmp_212_0_3_fu_876_p2 = (bramChapter_V_load_3_2_fu_844_p3 | 9'd32);

assign tmp_212_0_s_fu_797_p3 = ((icmp_reg_1664[0:0] === 1'b1) ? 9'd128 : 9'd384);

assign tmp_212_1_1_fu_957_p2 = (bramChapter_V_load_3_4_fu_928_p3 | 9'd64);

assign tmp_212_1_3_fu_995_p2 = (bramChapter_V_load_3_5_fu_963_p3 | 9'd32);

assign tmp_212_1_s_fu_916_p3 = ((icmp11_reg_1692[0:0] === 1'b1) ? 9'd128 : 9'd384);

assign tmp_212_2_1_fu_1076_p2 = (bramChapter_V_load_3_7_fu_1047_p3 | 9'd64);

assign tmp_212_2_3_fu_1114_p2 = (bramChapter_V_load_3_8_fu_1082_p3 | 9'd32);

assign tmp_212_2_s_fu_1035_p3 = ((icmp22_reg_1720[0:0] === 1'b1) ? 9'd128 : 9'd384);

assign tmp_212_3_1_fu_1195_p2 = (bramChapter_V_load_3_11_fu_1166_p3 | 9'd64);

assign tmp_212_3_3_fu_1233_p2 = (bramChapter_V_load_3_10_fu_1201_p3 | 9'd32);

assign tmp_212_3_s_fu_1154_p3 = ((icmp25_reg_1748[0:0] === 1'b1) ? 9'd128 : 9'd384);

assign tmp_53_fu_1266_p3 = {{tmp_69_reg_1781}, {tmp_68_reg_1776}};

assign tmp_55_fu_1272_p1 = tmp_53_fu_1266_p3;

assign tmp_56_fu_1345_p1 = r_V_s_reg_1936;

assign tmp_57_fu_1359_p2 = ($signed(tmp_56_fu_1345_p1) - $signed(r_V_29_cast_fu_1355_p1));

assign tmp_58_fu_1530_p1 = snr_V_read_reg_1651_pp0_iter5_reg;

assign tmp_59_fu_1558_p1 = r_V_57_reg_1991;

assign tmp_61_fu_1593_p2 = (($signed(roundedNoise_V_fu_1567_p4) < $signed(21'd1966081)) ? 1'b1 : 1'b0);

assign tmp_67_fu_336_p4 = {{chan_real_noise2_lfs[21:15]}};

assign tmp_68_fu_894_p2 = (tmp_137_fu_890_p1 | phitmp6125_i_reg_1682);

assign tmp_70_fu_418_p4 = {{chan_real_noise2_lfs[53:47]}};

assign tmp_71_fu_1013_p2 = (tmp_147_fu_1009_p1 | phitmp6125_i_1_reg_1710);

assign tmp_73_fu_506_p4 = {{chan_real_noise2_lfs[85:79]}};

assign tmp_74_fu_1132_p2 = (tmp_156_fu_1128_p1 | phitmp6125_i_2_reg_1738);

assign tmp_76_fu_594_p4 = {{chan_real_noise2_lfs[117:111]}};

assign tmp_77_fu_1251_p2 = (tmp_165_fu_1247_p1 | phitmp6125_i_3_reg_1766);

assign tmp_79_fu_670_p4 = {{chan_real_noise2_lfs[93:64]}};

assign tmp_cast_21_fu_1514_p1 = $signed(noiseGen_V_load_9_fu_1494_p3);

assign tmp_cast_fu_1510_p1 = $signed(noiseGen_V_load_8_fu_1453_p3);

assign tmp_fu_1615_p2 = (tmp_61_reg_2007 | icmp28_reg_2001);

assign tmp_s_fu_346_p3 = {{tmp_67_fu_336_p4}, {8'd0}};

endmodule //awgn_real2
