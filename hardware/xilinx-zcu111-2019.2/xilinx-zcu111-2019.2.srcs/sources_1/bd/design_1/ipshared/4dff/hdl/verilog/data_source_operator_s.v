// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1.0
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module data_source_operator_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
output  [34:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
reg    ap_block_pp0_stage0_11001;
reg   [127:0] rnd_src_lfsr128_V;
wire   [8:0] coarseContents_address0;
reg    coarseContents_ce0;
wire   [16:0] coarseContents_q0;
wire   [8:0] coarseContents_address1;
reg    coarseContents_ce1;
wire   [16:0] coarseContents_q1;
wire   [8:0] coarseContents_address2;
reg    coarseContents_ce2;
wire   [16:0] coarseContents_q2;
wire   [8:0] coarseContents_address3;
reg    coarseContents_ce3;
wire   [16:0] coarseContents_q3;
wire   [8:0] gradientContents_address0;
reg    gradientContents_ce0;
wire   [12:0] gradientContents_q0;
wire   [8:0] gradientContents_address1;
reg    gradientContents_ce1;
wire   [12:0] gradientContents_q1;
wire   [8:0] gradientContents_address2;
reg    gradientContents_ce2;
wire   [12:0] gradientContents_q2;
wire   [8:0] gradientContents_address3;
reg    gradientContents_ce3;
wire   [12:0] gradientContents_q3;
reg   [127:0] p_Val2_s_reg_1614;
reg   [127:0] p_Val2_s_reg_1614_pp0_iter1_reg;
reg   [127:0] p_Val2_s_reg_1614_pp0_iter2_reg;
reg   [127:0] p_Val2_s_reg_1614_pp0_iter3_reg;
reg   [127:0] p_Val2_s_reg_1614_pp0_iter4_reg;
reg   [127:0] p_Val2_s_reg_1614_pp0_iter5_reg;
wire   [0:0] icmp_fu_296_p2;
reg   [0:0] icmp_reg_1622;
wire   [14:0] norm_V_load_3_0_1_fu_320_p3;
reg   [14:0] norm_V_load_3_0_1_reg_1628;
wire   [0:0] icmp3_fu_338_p2;
reg   [0:0] icmp3_reg_1634;
reg   [4:0] phitmp2_reg_1640;
wire   [9:0] tmp_22_fu_354_p1;
reg   [9:0] tmp_22_reg_1645;
reg   [9:0] tmp_22_reg_1645_pp0_iter1_reg;
reg   [9:0] tmp_22_reg_1645_pp0_iter2_reg;
reg  signed [9:0] tmp_22_reg_1645_pp0_iter3_reg;
wire   [0:0] icmp1_fu_378_p2;
reg   [0:0] icmp1_reg_1650;
wire   [14:0] norm_V_load_3_1_1_fu_402_p3;
reg   [14:0] norm_V_load_3_1_1_reg_1656;
wire   [0:0] icmp2_fu_420_p2;
reg   [0:0] icmp2_reg_1662;
reg   [4:0] phitmp2_1_reg_1668;
reg   [9:0] tmp_45_1_reg_1673;
reg   [9:0] tmp_45_1_reg_1673_pp0_iter1_reg;
reg   [9:0] tmp_45_1_reg_1673_pp0_iter2_reg;
reg  signed [9:0] tmp_45_1_reg_1673_pp0_iter3_reg;
wire   [0:0] icmp5_fu_466_p2;
reg   [0:0] icmp5_reg_1678;
wire   [14:0] norm_V_load_3_2_1_fu_490_p3;
reg   [14:0] norm_V_load_3_2_1_reg_1684;
wire   [0:0] icmp7_fu_508_p2;
reg   [0:0] icmp7_reg_1690;
reg   [4:0] phitmp2_2_reg_1696;
reg   [9:0] tmp_45_2_reg_1701;
reg   [9:0] tmp_45_2_reg_1701_pp0_iter1_reg;
reg   [9:0] tmp_45_2_reg_1701_pp0_iter2_reg;
reg  signed [9:0] tmp_45_2_reg_1701_pp0_iter3_reg;
wire   [0:0] icmp9_fu_554_p2;
reg   [0:0] icmp9_reg_1706;
wire   [14:0] norm_V_load_3_3_1_fu_578_p3;
reg   [14:0] norm_V_load_3_3_1_reg_1712;
wire   [0:0] icmp10_fu_596_p2;
reg   [0:0] icmp10_reg_1718;
reg   [4:0] phitmp2_3_reg_1724;
reg   [9:0] tmp_45_3_reg_1729;
reg   [9:0] tmp_45_3_reg_1729_pp0_iter1_reg;
reg   [9:0] tmp_45_3_reg_1729_pp0_iter2_reg;
reg  signed [9:0] tmp_45_3_reg_1729_pp0_iter3_reg;
wire   [4:0] tmp_s_fu_860_p2;
reg   [4:0] tmp_s_reg_1734;
reg   [3:0] tmp_1_reg_1739;
wire   [4:0] tmp_16_fu_979_p2;
reg   [4:0] tmp_16_reg_1744;
reg   [3:0] tmp_17_reg_1749;
wire   [4:0] tmp_39_fu_1098_p2;
reg   [4:0] tmp_39_reg_1754;
reg   [3:0] tmp_40_reg_1759;
wire   [4:0] tmp_46_fu_1217_p2;
reg   [4:0] tmp_46_reg_1764;
reg   [3:0] tmp_47_reg_1769;
reg   [16:0] coarseContents_load_reg_1814;
reg   [16:0] coarseContents_load_reg_1814_pp0_iter4_reg;
reg   [16:0] coarseContents_load_reg_1814_pp0_iter5_reg;
reg   [12:0] gradientContents_loa_reg_1819;
reg   [16:0] coarseContents_load_1_reg_1824;
reg   [16:0] coarseContents_load_1_reg_1824_pp0_iter4_reg;
reg   [16:0] coarseContents_load_1_reg_1824_pp0_iter5_reg;
reg   [12:0] gradientContents_loa_1_reg_1829;
reg   [16:0] coarseContents_load_2_reg_1834;
reg   [16:0] coarseContents_load_2_reg_1834_pp0_iter4_reg;
reg   [16:0] coarseContents_load_2_reg_1834_pp0_iter5_reg;
reg   [12:0] gradientContents_loa_2_reg_1839;
reg   [16:0] coarseContents_load_3_reg_1844;
reg   [16:0] coarseContents_load_3_reg_1844_pp0_iter4_reg;
reg   [16:0] coarseContents_load_3_reg_1844_pp0_iter5_reg;
reg   [12:0] gradientContents_loa_3_reg_1849;
wire  signed [22:0] grp_fu_1590_p2;
reg  signed [22:0] r_V_9_reg_1894;
wire  signed [22:0] grp_fu_1596_p2;
reg  signed [22:0] r_V_9_1_reg_1899;
wire  signed [22:0] grp_fu_1602_p2;
reg  signed [22:0] r_V_9_2_reg_1904;
wire  signed [22:0] grp_fu_1608_p2;
reg  signed [22:0] r_V_9_3_reg_1909;
wire   [29:0] tmp7_fu_1484_p2;
reg   [29:0] tmp7_reg_1914;
wire   [29:0] tmp8_fu_1490_p2;
reg   [29:0] tmp8_reg_1919;
wire   [30:0] centralLimitNoise_V_fu_1502_p2;
reg  signed [30:0] centralLimitNoise_V_reg_1924;
wire   [46:0] grp_fu_1511_p2;
reg   [46:0] r_V_25_reg_1934;
wire   [48:0] r_V_fu_1524_p2;
reg   [48:0] r_V_reg_1939;
wire   [0:0] icmp12_fu_1550_p2;
reg   [0:0] icmp12_reg_1944;
wire   [0:0] tmp_21_fu_1556_p2;
reg   [0:0] tmp_21_reg_1950;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] tmp_3_fu_1238_p1;
wire   [63:0] tmp_46_1_fu_1250_p1;
wire   [63:0] tmp_46_2_fu_1262_p1;
wire   [63:0] tmp_46_3_fu_1274_p1;
wire   [127:0] p_Result_s_fu_742_p3;
wire   [7:0] tmp_9_fu_286_p4;
wire   [6:0] tmp_4_fu_302_p4;
wire   [14:0] tmp_2_fu_312_p3;
wire   [14:0] phitmp1_fu_276_p4;
wire   [3:0] tmp_10_fu_328_p4;
wire   [7:0] tmp_24_fu_368_p4;
wire   [6:0] tmp_15_fu_384_p4;
wire   [14:0] tmp_74_1_fu_394_p3;
wire   [14:0] phitmp1_1_fu_358_p4;
wire   [3:0] tmp_25_fu_410_p4;
wire   [7:0] tmp_33_fu_456_p4;
wire   [6:0] tmp_34_fu_472_p4;
wire   [14:0] tmp_74_2_fu_482_p3;
wire   [14:0] phitmp1_2_fu_446_p4;
wire   [3:0] tmp_35_fu_498_p4;
wire   [7:0] tmp_48_fu_544_p4;
wire   [6:0] tmp_42_fu_560_p4;
wire   [14:0] tmp_74_3_fu_570_p3;
wire   [14:0] phitmp1_3_fu_534_p4;
wire   [3:0] tmp_50_fu_586_p4;
wire   [29:0] tmp_49_fu_636_p4;
wire   [63:0] r_V_13_fu_646_p3;
wire   [63:0] lfsr1_V_fu_622_p4;
wire   [63:0] r_V_14_fu_654_p2;
wire   [28:0] r_V_3_fu_660_p4;
wire   [63:0] r_V_15_fu_670_p1;
wire   [63:0] r_V_16_fu_674_p2;
wire   [63:0] r_V_17_fu_680_p2;
wire   [5:0] tmp_60_fu_692_p1;
wire   [63:0] r_V_19_fu_696_p3;
wire   [63:0] lfsr2_V_fu_632_p1;
wire   [63:0] r_V_20_fu_704_p2;
wire   [50:0] r_V_8_fu_710_p4;
wire   [63:0] r_V_21_fu_720_p1;
wire   [63:0] r_V_22_fu_724_p2;
wire   [63:0] r_V_23_fu_730_p2;
wire   [63:0] r_V_18_fu_686_p2;
wire   [63:0] r_V_24_fu_736_p2;
wire   [8:0] bramChapter_V_load_1_fu_756_p3;
wire   [8:0] tmp_76_0_s_fu_763_p3;
wire   [14:0] tmp_11_fu_770_p2;
wire   [14:0] norm_V_load_3_0_2_fu_782_p3;
wire   [1:0] tmp_12_fu_788_p4;
wire   [8:0] bramChapter_V_load_1_1_fu_775_p3;
wire   [0:0] icmp6_fu_798_p2;
wire   [8:0] tmp_76_0_1_fu_804_p2;
wire   [0:0] tmp_13_fu_818_p3;
wire   [0:0] tmp_14_fu_826_p3;
wire   [8:0] bramChapter_V_load_1_2_fu_810_p3;
wire   [0:0] tmp_19_fu_834_p3;
wire   [8:0] tmp_76_0_3_fu_842_p2;
wire   [8:0] bramChapter_V_load_fu_848_p3;
wire   [4:0] tmp_20_fu_856_p1;
wire   [8:0] bramChapter_V_load_1_3_fu_875_p3;
wire   [8:0] tmp_76_1_s_fu_882_p3;
wire   [14:0] tmp_26_fu_889_p2;
wire   [14:0] norm_V_load_3_1_2_fu_901_p3;
wire   [1:0] tmp_27_fu_907_p4;
wire   [8:0] bramChapter_V_load_1_4_fu_894_p3;
wire   [0:0] icmp4_fu_917_p2;
wire   [8:0] tmp_76_1_1_fu_923_p2;
wire   [0:0] tmp_28_fu_937_p3;
wire   [0:0] tmp_29_fu_945_p3;
wire   [8:0] bramChapter_V_load_1_5_fu_929_p3;
wire   [0:0] tmp_30_fu_953_p3;
wire   [8:0] tmp_76_1_3_fu_961_p2;
wire   [8:0] bramChapter_V_load_s_fu_967_p3;
wire   [4:0] tmp_31_fu_975_p1;
wire   [8:0] bramChapter_V_load_1_6_fu_994_p3;
wire   [8:0] tmp_76_2_s_fu_1001_p3;
wire   [14:0] tmp_36_fu_1008_p2;
wire   [14:0] norm_V_load_3_2_2_fu_1020_p3;
wire   [1:0] tmp_37_fu_1026_p4;
wire   [8:0] bramChapter_V_load_1_7_fu_1013_p3;
wire   [0:0] icmp8_fu_1036_p2;
wire   [8:0] tmp_76_2_1_fu_1042_p2;
wire   [0:0] tmp_38_fu_1056_p3;
wire   [0:0] tmp_41_fu_1064_p3;
wire   [8:0] bramChapter_V_load_1_8_fu_1048_p3;
wire   [0:0] tmp_43_fu_1072_p3;
wire   [8:0] tmp_76_2_3_fu_1080_p2;
wire   [8:0] bramChapter_V_load_2_fu_1086_p3;
wire   [4:0] tmp_44_fu_1094_p1;
wire   [8:0] bramChapter_V_load_1_9_fu_1113_p3;
wire   [8:0] tmp_76_3_s_fu_1120_p3;
wire   [14:0] tmp_51_fu_1127_p2;
wire   [14:0] norm_V_load_3_3_2_fu_1139_p3;
wire   [1:0] tmp_52_fu_1145_p4;
wire   [8:0] bramChapter_V_load_1_11_fu_1132_p3;
wire   [0:0] icmp11_fu_1155_p2;
wire   [8:0] tmp_76_3_1_fu_1161_p2;
wire   [0:0] tmp_53_fu_1175_p3;
wire   [0:0] tmp_54_fu_1183_p3;
wire   [8:0] bramChapter_V_load_1_10_fu_1167_p3;
wire   [0:0] tmp_55_fu_1191_p3;
wire   [8:0] tmp_76_3_3_fu_1199_p2;
wire   [8:0] bramChapter_V_load_3_fu_1205_p3;
wire   [4:0] tmp_56_fu_1213_p1;
wire   [8:0] tmp_5_fu_1232_p3;
wire   [8:0] tmp_44_1_fu_1244_p3;
wire   [8:0] tmp_44_2_fu_1256_p3;
wire   [8:0] tmp_44_3_fu_1268_p3;
wire   [26:0] r_V_s_fu_1314_p3;
wire  signed [28:0] tmp_6_fu_1311_p1;
wire   [28:0] r_V_cast_fu_1321_p1;
wire   [0:0] tmp_8_fu_1304_p3;
wire   [28:0] tmp_7_fu_1325_p2;
wire   [28:0] addconv_fu_1331_p2;
wire   [26:0] r_V_16_1_fu_1355_p3;
wire  signed [28:0] tmp_47_1_fu_1352_p1;
wire   [28:0] r_V_16_1_cast_fu_1362_p1;
wire   [0:0] tmp_23_fu_1345_p3;
wire   [28:0] tmp_53_1_fu_1366_p2;
wire   [28:0] addconv_1_fu_1372_p2;
wire   [26:0] r_V_16_2_fu_1396_p3;
wire  signed [28:0] tmp_47_2_fu_1393_p1;
wire   [28:0] r_V_16_2_cast_fu_1403_p1;
wire   [0:0] tmp_32_fu_1386_p3;
wire   [28:0] tmp_53_2_fu_1407_p2;
wire   [28:0] addconv_2_fu_1413_p2;
wire   [26:0] r_V_16_3_fu_1437_p3;
wire  signed [28:0] tmp_47_3_fu_1434_p1;
wire   [28:0] r_V_16_3_cast_fu_1444_p1;
wire   [0:0] tmp_45_fu_1427_p3;
wire   [28:0] tmp_53_3_fu_1448_p2;
wire   [28:0] addconv_3_fu_1454_p2;
wire   [28:0] noiseGen_V_load_fu_1337_p3;
wire   [28:0] noiseGen_V_load_1_fu_1378_p3;
wire   [28:0] noiseGen_V_load_2_fu_1419_p3;
wire   [28:0] noiseGen_V_load_3_fu_1460_p3;
wire  signed [29:0] p_3_cast_fu_1472_p1;
wire  signed [29:0] p_2_cast_fu_1468_p1;
wire  signed [29:0] tmp_cast_fu_1476_p1;
wire  signed [29:0] tmp_cast_18_fu_1480_p1;
wire  signed [30:0] tmp8_cast_fu_1499_p1;
wire  signed [30:0] tmp7_cast_fu_1496_p1;
wire   [17:0] grp_fu_1511_p1;
wire  signed [47:0] r_V_8_cast_fu_1517_p1;
wire   [48:0] tmp_18_fu_1520_p1;
wire   [3:0] tmp_63_fu_1540_p4;
wire   [37:0] roundedNoise_V_fu_1530_p4;
wire   [0:0] tmp_fu_1578_p2;
wire   [34:0] saturatedNoise_V_1_fu_1571_p3;
wire   [34:0] saturatedNoise_V_fu_1562_p4;
wire   [12:0] grp_fu_1590_p0;
wire   [12:0] grp_fu_1596_p0;
wire   [12:0] grp_fu_1602_p0;
wire   [12:0] grp_fu_1608_p0;
reg    grp_fu_1511_ce;
reg    grp_fu_1590_ce;
reg    grp_fu_1596_ce;
reg    grp_fu_1602_ce;
reg    grp_fu_1608_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to11;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [22:0] grp_fu_1590_p00;
wire   [22:0] grp_fu_1596_p00;
wire   [22:0] grp_fu_1602_p00;
wire   [22:0] grp_fu_1608_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 rnd_src_lfsr128_V = 128'd1512366075204170930279365292653862640;
end

data_source_operator_s_coarsebkb #(
    .DataWidth( 17 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
coarseContents_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(coarseContents_address0),
    .ce0(coarseContents_ce0),
    .q0(coarseContents_q0),
    .address1(coarseContents_address1),
    .ce1(coarseContents_ce1),
    .q1(coarseContents_q1),
    .address2(coarseContents_address2),
    .ce2(coarseContents_ce2),
    .q2(coarseContents_q2),
    .address3(coarseContents_address3),
    .ce3(coarseContents_ce3),
    .q3(coarseContents_q3)
);

data_source_operator_s_gradiecud #(
    .DataWidth( 13 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
gradientContents_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(gradientContents_address0),
    .ce0(gradientContents_ce0),
    .q0(gradientContents_q0),
    .address1(gradientContents_address1),
    .ce1(gradientContents_ce1),
    .q1(gradientContents_q1),
    .address2(gradientContents_address2),
    .ce2(gradientContents_ce2),
    .q2(gradientContents_q2),
    .address3(gradientContents_address3),
    .ce3(gradientContents_ce3),
    .q3(gradientContents_q3)
);

data_source_top_mul_31s_18ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 47 ))
top_mul_31s_18ns_dEe_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(centralLimitNoise_V_reg_1924),
    .din1(grp_fu_1511_p1),
    .ce(grp_fu_1511_ce),
    .dout(grp_fu_1511_p2)
);

data_source_top_mul_mul_13ns_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 23 ))
top_mul_mul_13ns_eOg_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1590_p0),
    .din1(tmp_22_reg_1645_pp0_iter3_reg),
    .ce(grp_fu_1590_ce),
    .dout(grp_fu_1590_p2)
);

data_source_top_mul_mul_13ns_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 23 ))
top_mul_mul_13ns_eOg_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1596_p0),
    .din1(tmp_45_1_reg_1673_pp0_iter3_reg),
    .ce(grp_fu_1596_ce),
    .dout(grp_fu_1596_p2)
);

data_source_top_mul_mul_13ns_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 23 ))
top_mul_mul_13ns_eOg_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1602_p0),
    .din1(tmp_45_2_reg_1701_pp0_iter3_reg),
    .ce(grp_fu_1602_ce),
    .dout(grp_fu_1602_p2)
);

data_source_top_mul_mul_13ns_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 23 ))
top_mul_mul_13ns_eOg_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1608_p0),
    .din1(tmp_45_3_reg_1729_pp0_iter3_reg),
    .ce(grp_fu_1608_ce),
    .dout(grp_fu_1608_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        rnd_src_lfsr128_V <= 128'd1512366075204170930279365292653862640;
    end else begin
        if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            rnd_src_lfsr128_V <= p_Result_s_fu_742_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        centralLimitNoise_V_reg_1924 <= centralLimitNoise_V_fu_1502_p2;
        coarseContents_load_1_reg_1824_pp0_iter4_reg <= coarseContents_load_1_reg_1824;
        coarseContents_load_1_reg_1824_pp0_iter5_reg <= coarseContents_load_1_reg_1824_pp0_iter4_reg;
        coarseContents_load_2_reg_1834_pp0_iter4_reg <= coarseContents_load_2_reg_1834;
        coarseContents_load_2_reg_1834_pp0_iter5_reg <= coarseContents_load_2_reg_1834_pp0_iter4_reg;
        coarseContents_load_3_reg_1844_pp0_iter4_reg <= coarseContents_load_3_reg_1844;
        coarseContents_load_3_reg_1844_pp0_iter5_reg <= coarseContents_load_3_reg_1844_pp0_iter4_reg;
        coarseContents_load_reg_1814_pp0_iter4_reg <= coarseContents_load_reg_1814;
        coarseContents_load_reg_1814_pp0_iter5_reg <= coarseContents_load_reg_1814_pp0_iter4_reg;
        icmp12_reg_1944 <= icmp12_fu_1550_p2;
        p_Val2_s_reg_1614_pp0_iter2_reg <= p_Val2_s_reg_1614_pp0_iter1_reg;
        p_Val2_s_reg_1614_pp0_iter3_reg <= p_Val2_s_reg_1614_pp0_iter2_reg;
        p_Val2_s_reg_1614_pp0_iter4_reg <= p_Val2_s_reg_1614_pp0_iter3_reg;
        p_Val2_s_reg_1614_pp0_iter5_reg <= p_Val2_s_reg_1614_pp0_iter4_reg;
        r_V_25_reg_1934 <= grp_fu_1511_p2;
        r_V_9_1_reg_1899 <= grp_fu_1596_p2;
        r_V_9_2_reg_1904 <= grp_fu_1602_p2;
        r_V_9_3_reg_1909 <= grp_fu_1608_p2;
        r_V_9_reg_1894 <= grp_fu_1590_p2;
        r_V_reg_1939 <= r_V_fu_1524_p2;
        tmp7_reg_1914 <= tmp7_fu_1484_p2;
        tmp8_reg_1919 <= tmp8_fu_1490_p2;
        tmp_21_reg_1950 <= tmp_21_fu_1556_p2;
        tmp_22_reg_1645_pp0_iter2_reg <= tmp_22_reg_1645_pp0_iter1_reg;
        tmp_22_reg_1645_pp0_iter3_reg <= tmp_22_reg_1645_pp0_iter2_reg;
        tmp_45_1_reg_1673_pp0_iter2_reg <= tmp_45_1_reg_1673_pp0_iter1_reg;
        tmp_45_1_reg_1673_pp0_iter3_reg <= tmp_45_1_reg_1673_pp0_iter2_reg;
        tmp_45_2_reg_1701_pp0_iter2_reg <= tmp_45_2_reg_1701_pp0_iter1_reg;
        tmp_45_2_reg_1701_pp0_iter3_reg <= tmp_45_2_reg_1701_pp0_iter2_reg;
        tmp_45_3_reg_1729_pp0_iter2_reg <= tmp_45_3_reg_1729_pp0_iter1_reg;
        tmp_45_3_reg_1729_pp0_iter3_reg <= tmp_45_3_reg_1729_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        coarseContents_load_1_reg_1824 <= coarseContents_q1;
        coarseContents_load_2_reg_1834 <= coarseContents_q2;
        coarseContents_load_3_reg_1844 <= coarseContents_q3;
        coarseContents_load_reg_1814 <= coarseContents_q0;
        gradientContents_loa_1_reg_1829 <= gradientContents_q1;
        gradientContents_loa_2_reg_1839 <= gradientContents_q2;
        gradientContents_loa_3_reg_1849 <= gradientContents_q3;
        gradientContents_loa_reg_1819 <= gradientContents_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp10_reg_1718 <= icmp10_fu_596_p2;
        icmp1_reg_1650 <= icmp1_fu_378_p2;
        icmp2_reg_1662 <= icmp2_fu_420_p2;
        icmp3_reg_1634 <= icmp3_fu_338_p2;
        icmp5_reg_1678 <= icmp5_fu_466_p2;
        icmp7_reg_1690 <= icmp7_fu_508_p2;
        icmp9_reg_1706 <= icmp9_fu_554_p2;
        icmp_reg_1622 <= icmp_fu_296_p2;
        norm_V_load_3_0_1_reg_1628 <= norm_V_load_3_0_1_fu_320_p3;
        norm_V_load_3_1_1_reg_1656 <= norm_V_load_3_1_1_fu_402_p3;
        norm_V_load_3_2_1_reg_1684 <= norm_V_load_3_2_1_fu_490_p3;
        norm_V_load_3_3_1_reg_1712 <= norm_V_load_3_3_1_fu_578_p3;
        p_Val2_s_reg_1614 <= rnd_src_lfsr128_V;
        p_Val2_s_reg_1614_pp0_iter1_reg <= p_Val2_s_reg_1614;
        phitmp2_1_reg_1668 <= {{rnd_src_lfsr128_V[46:42]}};
        phitmp2_2_reg_1696 <= {{rnd_src_lfsr128_V[78:74]}};
        phitmp2_3_reg_1724 <= {{rnd_src_lfsr128_V[110:106]}};
        phitmp2_reg_1640 <= {{rnd_src_lfsr128_V[14:10]}};
        tmp_16_reg_1744 <= tmp_16_fu_979_p2;
        tmp_17_reg_1749 <= {{bramChapter_V_load_s_fu_967_p3[8:5]}};
        tmp_1_reg_1739 <= {{bramChapter_V_load_fu_848_p3[8:5]}};
        tmp_22_reg_1645 <= tmp_22_fu_354_p1;
        tmp_22_reg_1645_pp0_iter1_reg <= tmp_22_reg_1645;
        tmp_39_reg_1754 <= tmp_39_fu_1098_p2;
        tmp_40_reg_1759 <= {{bramChapter_V_load_2_fu_1086_p3[8:5]}};
        tmp_45_1_reg_1673 <= {{rnd_src_lfsr128_V[41:32]}};
        tmp_45_1_reg_1673_pp0_iter1_reg <= tmp_45_1_reg_1673;
        tmp_45_2_reg_1701 <= {{rnd_src_lfsr128_V[73:64]}};
        tmp_45_2_reg_1701_pp0_iter1_reg <= tmp_45_2_reg_1701;
        tmp_45_3_reg_1729 <= {{rnd_src_lfsr128_V[105:96]}};
        tmp_45_3_reg_1729_pp0_iter1_reg <= tmp_45_3_reg_1729;
        tmp_46_reg_1764 <= tmp_46_fu_1217_p2;
        tmp_47_reg_1769 <= {{bramChapter_V_load_3_fu_1205_p3[8:5]}};
        tmp_s_reg_1734 <= tmp_s_fu_860_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to11 = 1'b1;
    end else begin
        ap_idle_pp0_0to11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to11 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        coarseContents_ce0 = 1'b1;
    end else begin
        coarseContents_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        coarseContents_ce1 = 1'b1;
    end else begin
        coarseContents_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        coarseContents_ce2 = 1'b1;
    end else begin
        coarseContents_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        coarseContents_ce3 = 1'b1;
    end else begin
        coarseContents_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        gradientContents_ce0 = 1'b1;
    end else begin
        gradientContents_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        gradientContents_ce1 = 1'b1;
    end else begin
        gradientContents_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        gradientContents_ce2 = 1'b1;
    end else begin
        gradientContents_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        gradientContents_ce3 = 1'b1;
    end else begin
        gradientContents_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1511_ce = 1'b1;
    end else begin
        grp_fu_1511_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1590_ce = 1'b1;
    end else begin
        grp_fu_1590_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1596_ce = 1'b1;
    end else begin
        grp_fu_1596_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1602_ce = 1'b1;
    end else begin
        grp_fu_1602_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1608_ce = 1'b1;
    end else begin
        grp_fu_1608_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign addconv_1_fu_1372_p2 = ($signed(r_V_16_1_cast_fu_1362_p1) + $signed(tmp_47_1_fu_1352_p1));

assign addconv_2_fu_1413_p2 = ($signed(r_V_16_2_cast_fu_1403_p1) + $signed(tmp_47_2_fu_1393_p1));

assign addconv_3_fu_1454_p2 = ($signed(r_V_16_3_cast_fu_1444_p1) + $signed(tmp_47_3_fu_1434_p1));

assign addconv_fu_1331_p2 = ($signed(r_V_cast_fu_1321_p1) + $signed(tmp_6_fu_1311_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = ((tmp_fu_1578_p2[0:0] === 1'b1) ? saturatedNoise_V_1_fu_1571_p3 : saturatedNoise_V_fu_1562_p4);

assign bramChapter_V_load_1_10_fu_1167_p3 = ((icmp11_fu_1155_p2[0:0] === 1'b1) ? bramChapter_V_load_1_11_fu_1132_p3 : tmp_76_3_1_fu_1161_p2);

assign bramChapter_V_load_1_11_fu_1132_p3 = ((icmp10_reg_1718[0:0] === 1'b1) ? bramChapter_V_load_1_9_fu_1113_p3 : tmp_76_3_s_fu_1120_p3);

assign bramChapter_V_load_1_1_fu_775_p3 = ((icmp3_reg_1634[0:0] === 1'b1) ? bramChapter_V_load_1_fu_756_p3 : tmp_76_0_s_fu_763_p3);

assign bramChapter_V_load_1_2_fu_810_p3 = ((icmp6_fu_798_p2[0:0] === 1'b1) ? bramChapter_V_load_1_1_fu_775_p3 : tmp_76_0_1_fu_804_p2);

assign bramChapter_V_load_1_3_fu_875_p3 = ((icmp1_reg_1650[0:0] === 1'b1) ? 9'd0 : 9'd256);

assign bramChapter_V_load_1_4_fu_894_p3 = ((icmp2_reg_1662[0:0] === 1'b1) ? bramChapter_V_load_1_3_fu_875_p3 : tmp_76_1_s_fu_882_p3);

assign bramChapter_V_load_1_5_fu_929_p3 = ((icmp4_fu_917_p2[0:0] === 1'b1) ? bramChapter_V_load_1_4_fu_894_p3 : tmp_76_1_1_fu_923_p2);

assign bramChapter_V_load_1_6_fu_994_p3 = ((icmp5_reg_1678[0:0] === 1'b1) ? 9'd0 : 9'd256);

assign bramChapter_V_load_1_7_fu_1013_p3 = ((icmp7_reg_1690[0:0] === 1'b1) ? bramChapter_V_load_1_6_fu_994_p3 : tmp_76_2_s_fu_1001_p3);

assign bramChapter_V_load_1_8_fu_1048_p3 = ((icmp8_fu_1036_p2[0:0] === 1'b1) ? bramChapter_V_load_1_7_fu_1013_p3 : tmp_76_2_1_fu_1042_p2);

assign bramChapter_V_load_1_9_fu_1113_p3 = ((icmp9_reg_1706[0:0] === 1'b1) ? 9'd0 : 9'd256);

assign bramChapter_V_load_1_fu_756_p3 = ((icmp_reg_1622[0:0] === 1'b1) ? 9'd0 : 9'd256);

assign bramChapter_V_load_2_fu_1086_p3 = ((tmp_43_fu_1072_p3[0:0] === 1'b1) ? tmp_76_2_3_fu_1080_p2 : bramChapter_V_load_1_8_fu_1048_p3);

assign bramChapter_V_load_3_fu_1205_p3 = ((tmp_55_fu_1191_p3[0:0] === 1'b1) ? tmp_76_3_3_fu_1199_p2 : bramChapter_V_load_1_10_fu_1167_p3);

assign bramChapter_V_load_fu_848_p3 = ((tmp_19_fu_834_p3[0:0] === 1'b1) ? tmp_76_0_3_fu_842_p2 : bramChapter_V_load_1_2_fu_810_p3);

assign bramChapter_V_load_s_fu_967_p3 = ((tmp_30_fu_953_p3[0:0] === 1'b1) ? tmp_76_1_3_fu_961_p2 : bramChapter_V_load_1_5_fu_929_p3);

assign centralLimitNoise_V_fu_1502_p2 = ($signed(tmp8_cast_fu_1499_p1) + $signed(tmp7_cast_fu_1496_p1));

assign coarseContents_address0 = tmp_3_fu_1238_p1;

assign coarseContents_address1 = tmp_46_1_fu_1250_p1;

assign coarseContents_address2 = tmp_46_2_fu_1262_p1;

assign coarseContents_address3 = tmp_46_3_fu_1274_p1;

assign gradientContents_address0 = tmp_3_fu_1238_p1;

assign gradientContents_address1 = tmp_46_1_fu_1250_p1;

assign gradientContents_address2 = tmp_46_2_fu_1262_p1;

assign gradientContents_address3 = tmp_46_3_fu_1274_p1;

assign grp_fu_1511_p1 = 47'd116675;

assign grp_fu_1590_p0 = grp_fu_1590_p00;

assign grp_fu_1590_p00 = gradientContents_loa_reg_1819;

assign grp_fu_1596_p0 = grp_fu_1596_p00;

assign grp_fu_1596_p00 = gradientContents_loa_1_reg_1829;

assign grp_fu_1602_p0 = grp_fu_1602_p00;

assign grp_fu_1602_p00 = gradientContents_loa_2_reg_1839;

assign grp_fu_1608_p0 = grp_fu_1608_p00;

assign grp_fu_1608_p00 = gradientContents_loa_3_reg_1849;

assign icmp10_fu_596_p2 = ((tmp_50_fu_586_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp11_fu_1155_p2 = ((tmp_52_fu_1145_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp12_fu_1550_p2 = (($signed(tmp_63_fu_1540_p4) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign icmp1_fu_378_p2 = ((tmp_24_fu_368_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp2_fu_420_p2 = ((tmp_25_fu_410_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp3_fu_338_p2 = ((tmp_10_fu_328_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp4_fu_917_p2 = ((tmp_27_fu_907_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp5_fu_466_p2 = ((tmp_33_fu_456_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp6_fu_798_p2 = ((tmp_12_fu_788_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp7_fu_508_p2 = ((tmp_35_fu_498_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp8_fu_1036_p2 = ((tmp_37_fu_1026_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp9_fu_554_p2 = ((tmp_48_fu_544_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_fu_296_p2 = ((tmp_9_fu_286_p4 == 8'd0) ? 1'b1 : 1'b0);

assign lfsr1_V_fu_622_p4 = {{rnd_src_lfsr128_V[127:64]}};

assign lfsr2_V_fu_632_p1 = rnd_src_lfsr128_V[63:0];

assign noiseGen_V_load_1_fu_1378_p3 = ((tmp_23_fu_1345_p3[0:0] === 1'b1) ? tmp_53_1_fu_1366_p2 : addconv_1_fu_1372_p2);

assign noiseGen_V_load_2_fu_1419_p3 = ((tmp_32_fu_1386_p3[0:0] === 1'b1) ? tmp_53_2_fu_1407_p2 : addconv_2_fu_1413_p2);

assign noiseGen_V_load_3_fu_1460_p3 = ((tmp_45_fu_1427_p3[0:0] === 1'b1) ? tmp_53_3_fu_1448_p2 : addconv_3_fu_1454_p2);

assign noiseGen_V_load_fu_1337_p3 = ((tmp_8_fu_1304_p3[0:0] === 1'b1) ? tmp_7_fu_1325_p2 : addconv_fu_1331_p2);

assign norm_V_load_3_0_1_fu_320_p3 = ((icmp_fu_296_p2[0:0] === 1'b1) ? tmp_2_fu_312_p3 : phitmp1_fu_276_p4);

assign norm_V_load_3_0_2_fu_782_p3 = ((icmp3_reg_1634[0:0] === 1'b1) ? tmp_11_fu_770_p2 : norm_V_load_3_0_1_reg_1628);

assign norm_V_load_3_1_1_fu_402_p3 = ((icmp1_fu_378_p2[0:0] === 1'b1) ? tmp_74_1_fu_394_p3 : phitmp1_1_fu_358_p4);

assign norm_V_load_3_1_2_fu_901_p3 = ((icmp2_reg_1662[0:0] === 1'b1) ? tmp_26_fu_889_p2 : norm_V_load_3_1_1_reg_1656);

assign norm_V_load_3_2_1_fu_490_p3 = ((icmp5_fu_466_p2[0:0] === 1'b1) ? tmp_74_2_fu_482_p3 : phitmp1_2_fu_446_p4);

assign norm_V_load_3_2_2_fu_1020_p3 = ((icmp7_reg_1690[0:0] === 1'b1) ? tmp_36_fu_1008_p2 : norm_V_load_3_2_1_reg_1684);

assign norm_V_load_3_3_1_fu_578_p3 = ((icmp9_fu_554_p2[0:0] === 1'b1) ? tmp_74_3_fu_570_p3 : phitmp1_3_fu_534_p4);

assign norm_V_load_3_3_2_fu_1139_p3 = ((icmp10_reg_1718[0:0] === 1'b1) ? tmp_51_fu_1127_p2 : norm_V_load_3_3_1_reg_1712);

assign p_2_cast_fu_1468_p1 = $signed(noiseGen_V_load_fu_1337_p3);

assign p_3_cast_fu_1472_p1 = $signed(noiseGen_V_load_1_fu_1378_p3);

assign p_Result_s_fu_742_p3 = {{r_V_18_fu_686_p2}, {r_V_24_fu_736_p2}};

assign phitmp1_1_fu_358_p4 = {{rnd_src_lfsr128_V[61:47]}};

assign phitmp1_2_fu_446_p4 = {{rnd_src_lfsr128_V[93:79]}};

assign phitmp1_3_fu_534_p4 = {{rnd_src_lfsr128_V[125:111]}};

assign phitmp1_fu_276_p4 = {{rnd_src_lfsr128_V[29:15]}};

assign r_V_13_fu_646_p3 = {{tmp_49_fu_636_p4}, {34'd0}};

assign r_V_14_fu_654_p2 = (r_V_13_fu_646_p3 ^ lfsr1_V_fu_622_p4);

assign r_V_15_fu_670_p1 = r_V_3_fu_660_p4;

assign r_V_16_1_cast_fu_1362_p1 = r_V_16_1_fu_1355_p3;

assign r_V_16_1_fu_1355_p3 = {{coarseContents_load_1_reg_1824_pp0_iter5_reg}, {10'd0}};

assign r_V_16_2_cast_fu_1403_p1 = r_V_16_2_fu_1396_p3;

assign r_V_16_2_fu_1396_p3 = {{coarseContents_load_2_reg_1834_pp0_iter5_reg}, {10'd0}};

assign r_V_16_3_cast_fu_1444_p1 = r_V_16_3_fu_1437_p3;

assign r_V_16_3_fu_1437_p3 = {{coarseContents_load_3_reg_1844_pp0_iter5_reg}, {10'd0}};

assign r_V_16_fu_674_p2 = (r_V_15_fu_670_p1 ^ r_V_14_fu_654_p2);

assign r_V_17_fu_680_p2 = r_V_16_fu_674_p2 << 64'd1;

assign r_V_18_fu_686_p2 = (r_V_17_fu_680_p2 ^ r_V_16_fu_674_p2);

assign r_V_19_fu_696_p3 = {{tmp_60_fu_692_p1}, {58'd0}};

assign r_V_20_fu_704_p2 = (r_V_19_fu_696_p3 ^ lfsr2_V_fu_632_p1);

assign r_V_21_fu_720_p1 = r_V_8_fu_710_p4;

assign r_V_22_fu_724_p2 = (r_V_21_fu_720_p1 ^ r_V_20_fu_704_p2);

assign r_V_23_fu_730_p2 = r_V_22_fu_724_p2 << 64'd7;

assign r_V_24_fu_736_p2 = (r_V_23_fu_730_p2 ^ r_V_22_fu_724_p2);

assign r_V_3_fu_660_p4 = {{r_V_14_fu_654_p2[63:35]}};

assign r_V_8_cast_fu_1517_p1 = $signed(r_V_25_reg_1934);

assign r_V_8_fu_710_p4 = {{r_V_20_fu_704_p2[63:13]}};

assign r_V_cast_fu_1321_p1 = r_V_s_fu_1314_p3;

assign r_V_fu_1524_p2 = (tmp_18_fu_1520_p1 + 49'd512);

assign r_V_s_fu_1314_p3 = {{coarseContents_load_reg_1814_pp0_iter5_reg}, {10'd0}};

assign roundedNoise_V_fu_1530_p4 = {{r_V_fu_1524_p2[47:10]}};

assign saturatedNoise_V_1_fu_1571_p3 = ((icmp12_reg_1944[0:0] === 1'b1) ? 35'd17179869183 : 35'd17179869185);

assign saturatedNoise_V_fu_1562_p4 = {{r_V_reg_1939[44:10]}};

assign tmp7_cast_fu_1496_p1 = $signed(tmp7_reg_1914);

assign tmp7_fu_1484_p2 = ($signed(p_3_cast_fu_1472_p1) + $signed(p_2_cast_fu_1468_p1));

assign tmp8_cast_fu_1499_p1 = $signed(tmp8_reg_1919);

assign tmp8_fu_1490_p2 = ($signed(tmp_cast_fu_1476_p1) + $signed(tmp_cast_18_fu_1480_p1));

assign tmp_10_fu_328_p4 = {{norm_V_load_3_0_1_fu_320_p3[14:11]}};

assign tmp_11_fu_770_p2 = norm_V_load_3_0_1_reg_1628 << 15'd4;

assign tmp_12_fu_788_p4 = {{norm_V_load_3_0_2_fu_782_p3[14:13]}};

assign tmp_13_fu_818_p3 = norm_V_load_3_0_2_fu_782_p3[32'd12];

assign tmp_14_fu_826_p3 = norm_V_load_3_0_2_fu_782_p3[32'd14];

assign tmp_15_fu_384_p4 = {{rnd_src_lfsr128_V[53:47]}};

assign tmp_16_fu_979_p2 = (tmp_31_fu_975_p1 | phitmp2_1_reg_1668);

assign tmp_18_fu_1520_p1 = $unsigned(r_V_8_cast_fu_1517_p1);

assign tmp_19_fu_834_p3 = ((icmp6_fu_798_p2[0:0] === 1'b1) ? tmp_13_fu_818_p3 : tmp_14_fu_826_p3);

assign tmp_20_fu_856_p1 = bramChapter_V_load_fu_848_p3[4:0];

assign tmp_21_fu_1556_p2 = (($signed(roundedNoise_V_fu_1530_p4) < $signed(38'd257698037761)) ? 1'b1 : 1'b0);

assign tmp_22_fu_354_p1 = rnd_src_lfsr128_V[9:0];

assign tmp_23_fu_1345_p3 = p_Val2_s_reg_1614_pp0_iter5_reg[32'd63];

assign tmp_24_fu_368_p4 = {{rnd_src_lfsr128_V[61:54]}};

assign tmp_25_fu_410_p4 = {{norm_V_load_3_1_1_fu_402_p3[14:11]}};

assign tmp_26_fu_889_p2 = norm_V_load_3_1_1_reg_1656 << 15'd4;

assign tmp_27_fu_907_p4 = {{norm_V_load_3_1_2_fu_901_p3[14:13]}};

assign tmp_28_fu_937_p3 = norm_V_load_3_1_2_fu_901_p3[32'd12];

assign tmp_29_fu_945_p3 = norm_V_load_3_1_2_fu_901_p3[32'd14];

assign tmp_2_fu_312_p3 = {{tmp_4_fu_302_p4}, {8'd0}};

assign tmp_30_fu_953_p3 = ((icmp4_fu_917_p2[0:0] === 1'b1) ? tmp_28_fu_937_p3 : tmp_29_fu_945_p3);

assign tmp_31_fu_975_p1 = bramChapter_V_load_s_fu_967_p3[4:0];

assign tmp_32_fu_1386_p3 = p_Val2_s_reg_1614_pp0_iter5_reg[32'd95];

assign tmp_33_fu_456_p4 = {{rnd_src_lfsr128_V[93:86]}};

assign tmp_34_fu_472_p4 = {{rnd_src_lfsr128_V[85:79]}};

assign tmp_35_fu_498_p4 = {{norm_V_load_3_2_1_fu_490_p3[14:11]}};

assign tmp_36_fu_1008_p2 = norm_V_load_3_2_1_reg_1684 << 15'd4;

assign tmp_37_fu_1026_p4 = {{norm_V_load_3_2_2_fu_1020_p3[14:13]}};

assign tmp_38_fu_1056_p3 = norm_V_load_3_2_2_fu_1020_p3[32'd12];

assign tmp_39_fu_1098_p2 = (tmp_44_fu_1094_p1 | phitmp2_2_reg_1696);

assign tmp_3_fu_1238_p1 = tmp_5_fu_1232_p3;

assign tmp_41_fu_1064_p3 = norm_V_load_3_2_2_fu_1020_p3[32'd14];

assign tmp_42_fu_560_p4 = {{rnd_src_lfsr128_V[117:111]}};

assign tmp_43_fu_1072_p3 = ((icmp8_fu_1036_p2[0:0] === 1'b1) ? tmp_38_fu_1056_p3 : tmp_41_fu_1064_p3);

assign tmp_44_1_fu_1244_p3 = {{tmp_17_reg_1749}, {tmp_16_reg_1744}};

assign tmp_44_2_fu_1256_p3 = {{tmp_40_reg_1759}, {tmp_39_reg_1754}};

assign tmp_44_3_fu_1268_p3 = {{tmp_47_reg_1769}, {tmp_46_reg_1764}};

assign tmp_44_fu_1094_p1 = bramChapter_V_load_2_fu_1086_p3[4:0];

assign tmp_45_fu_1427_p3 = p_Val2_s_reg_1614_pp0_iter5_reg[32'd127];

assign tmp_46_1_fu_1250_p1 = tmp_44_1_fu_1244_p3;

assign tmp_46_2_fu_1262_p1 = tmp_44_2_fu_1256_p3;

assign tmp_46_3_fu_1274_p1 = tmp_44_3_fu_1268_p3;

assign tmp_46_fu_1217_p2 = (tmp_56_fu_1213_p1 | phitmp2_3_reg_1724);

assign tmp_47_1_fu_1352_p1 = r_V_9_1_reg_1899;

assign tmp_47_2_fu_1393_p1 = r_V_9_2_reg_1904;

assign tmp_47_3_fu_1434_p1 = r_V_9_3_reg_1909;

assign tmp_48_fu_544_p4 = {{rnd_src_lfsr128_V[125:118]}};

assign tmp_49_fu_636_p4 = {{rnd_src_lfsr128_V[93:64]}};

assign tmp_4_fu_302_p4 = {{rnd_src_lfsr128_V[21:15]}};

assign tmp_50_fu_586_p4 = {{norm_V_load_3_3_1_fu_578_p3[14:11]}};

assign tmp_51_fu_1127_p2 = norm_V_load_3_3_1_reg_1712 << 15'd4;

assign tmp_52_fu_1145_p4 = {{norm_V_load_3_3_2_fu_1139_p3[14:13]}};

assign tmp_53_1_fu_1366_p2 = ($signed(tmp_47_1_fu_1352_p1) - $signed(r_V_16_1_cast_fu_1362_p1));

assign tmp_53_2_fu_1407_p2 = ($signed(tmp_47_2_fu_1393_p1) - $signed(r_V_16_2_cast_fu_1403_p1));

assign tmp_53_3_fu_1448_p2 = ($signed(tmp_47_3_fu_1434_p1) - $signed(r_V_16_3_cast_fu_1444_p1));

assign tmp_53_fu_1175_p3 = norm_V_load_3_3_2_fu_1139_p3[32'd12];

assign tmp_54_fu_1183_p3 = norm_V_load_3_3_2_fu_1139_p3[32'd14];

assign tmp_55_fu_1191_p3 = ((icmp11_fu_1155_p2[0:0] === 1'b1) ? tmp_53_fu_1175_p3 : tmp_54_fu_1183_p3);

assign tmp_56_fu_1213_p1 = bramChapter_V_load_3_fu_1205_p3[4:0];

assign tmp_5_fu_1232_p3 = {{tmp_1_reg_1739}, {tmp_s_reg_1734}};

assign tmp_60_fu_692_p1 = rnd_src_lfsr128_V[5:0];

assign tmp_63_fu_1540_p4 = {{r_V_fu_1524_p2[47:44]}};

assign tmp_6_fu_1311_p1 = r_V_9_reg_1894;

assign tmp_74_1_fu_394_p3 = {{tmp_15_fu_384_p4}, {8'd0}};

assign tmp_74_2_fu_482_p3 = {{tmp_34_fu_472_p4}, {8'd0}};

assign tmp_74_3_fu_570_p3 = {{tmp_42_fu_560_p4}, {8'd0}};

assign tmp_76_0_1_fu_804_p2 = (bramChapter_V_load_1_1_fu_775_p3 | 9'd64);

assign tmp_76_0_3_fu_842_p2 = (bramChapter_V_load_1_2_fu_810_p3 | 9'd32);

assign tmp_76_0_s_fu_763_p3 = ((icmp_reg_1622[0:0] === 1'b1) ? 9'd128 : 9'd384);

assign tmp_76_1_1_fu_923_p2 = (bramChapter_V_load_1_4_fu_894_p3 | 9'd64);

assign tmp_76_1_3_fu_961_p2 = (bramChapter_V_load_1_5_fu_929_p3 | 9'd32);

assign tmp_76_1_s_fu_882_p3 = ((icmp1_reg_1650[0:0] === 1'b1) ? 9'd128 : 9'd384);

assign tmp_76_2_1_fu_1042_p2 = (bramChapter_V_load_1_7_fu_1013_p3 | 9'd64);

assign tmp_76_2_3_fu_1080_p2 = (bramChapter_V_load_1_8_fu_1048_p3 | 9'd32);

assign tmp_76_2_s_fu_1001_p3 = ((icmp5_reg_1678[0:0] === 1'b1) ? 9'd128 : 9'd384);

assign tmp_76_3_1_fu_1161_p2 = (bramChapter_V_load_1_11_fu_1132_p3 | 9'd64);

assign tmp_76_3_3_fu_1199_p2 = (bramChapter_V_load_1_10_fu_1167_p3 | 9'd32);

assign tmp_76_3_s_fu_1120_p3 = ((icmp9_reg_1706[0:0] === 1'b1) ? 9'd128 : 9'd384);

assign tmp_7_fu_1325_p2 = ($signed(tmp_6_fu_1311_p1) - $signed(r_V_cast_fu_1321_p1));

assign tmp_8_fu_1304_p3 = p_Val2_s_reg_1614_pp0_iter5_reg[32'd31];

assign tmp_9_fu_286_p4 = {{rnd_src_lfsr128_V[29:22]}};

assign tmp_cast_18_fu_1480_p1 = $signed(noiseGen_V_load_3_fu_1460_p3);

assign tmp_cast_fu_1476_p1 = $signed(noiseGen_V_load_2_fu_1419_p3);

assign tmp_fu_1578_p2 = (tmp_21_reg_1950 | icmp12_reg_1944);

assign tmp_s_fu_860_p2 = (tmp_20_fu_856_p1 | phitmp2_reg_1640);

endmodule //data_source_operator_s
