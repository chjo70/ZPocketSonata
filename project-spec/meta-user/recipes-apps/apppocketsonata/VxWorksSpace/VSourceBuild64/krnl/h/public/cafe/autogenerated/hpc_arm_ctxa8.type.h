/* Copyright (c) 2014 Wind River Systems, Inc.
 *
 * The right to copy, distribute, modify or otherwise make use
 * of this software may be licensed only pursuant to the terms
 * of an applicable Wind River license agreement.
 */

/* This file has been autogenerated by cafe-type2h(1). */

#ifndef CAFE_TYPE2H_HPC_ARM_CTXA8_TYPE_autogenerated_h
#define CAFE_TYPE2H_HPC_ARM_CTXA8_TYPE_autogenerated_h

#include <cafe/autogenerated/cafe.type.h>

#ifdef __cplusplus
extern "C" {
#endif

#define hpc_arm_cortex_a8_BR_DIRECTION_MISPREDICTION_VT_DEF "S[hpc.arm_cortex_a8_BR_DIRECTION_MISPREDICTION,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Two forms of branch direction misprediction\"]]"
#define hpc_arm_cortex_a8_BR_DIRECTION_MISPREDICTION_VT_REF "t[hpc.arm_cortex_a8_BR_DIRECTION_MISPREDICTION]"

#define hpc_arm_cortex_a8_CID_WRITE_VT_DEF "S[hpc.arm_cortex_a8_CID_WRITE,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Write context ID Register\"]]"
#define hpc_arm_cortex_a8_CID_WRITE_VT_REF "t[hpc.arm_cortex_a8_CID_WRITE]"

#define hpc_arm_cortex_a8_CLOCK_CYCLES_VT_DEF "S[hpc.arm_cortex_a8_CLOCK_CYCLES,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Clock cycle count\"]]"
#define hpc_arm_cortex_a8_CLOCK_CYCLES_VT_REF "t[hpc.arm_cortex_a8_CLOCK_CYCLES]"

#define hpc_arm_cortex_a8_CYCLES_AXI_READ_VT_DEF "S[hpc.arm_cortex_a8_CYCLES_AXI_READ,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"The number of cycles for any active AXI read channel transactions\"]]"
#define hpc_arm_cortex_a8_CYCLES_AXI_READ_VT_REF "t[hpc.arm_cortex_a8_CYCLES_AXI_READ]"

#define hpc_arm_cortex_a8_CYCLES_AXI_WRITE_VT_DEF "S[hpc.arm_cortex_a8_CYCLES_AXI_WRITE,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"The number of cycles for any active AXI write channel transactions\"]]"
#define hpc_arm_cortex_a8_CYCLES_AXI_WRITE_VT_REF "t[hpc.arm_cortex_a8_CYCLES_AXI_WRITE]"

#define hpc_arm_cortex_a8_CYCLES_NEON_NOT_IDLE_VT_DEF "S[hpc.arm_cortex_a8_CYCLES_NEON_NOT_IDLE,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Number of cycles that NEON and integer processors are both not idle\"]]"
#define hpc_arm_cortex_a8_CYCLES_NEON_NOT_IDLE_VT_REF "t[hpc.arm_cortex_a8_CYCLES_NEON_NOT_IDLE]"

#define hpc_arm_cortex_a8_CYCLES_STALL_AS_QUEUE_VT_DEF "S[hpc.arm_cortex_a8_CYCLES_STALL_AS_QUEUE,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Number of cycles that the processor stalls as a result of a full NEON instruction queue or NEON load queue\"]]"
#define hpc_arm_cortex_a8_CYCLES_STALL_AS_QUEUE_VT_REF "t[hpc.arm_cortex_a8_CYCLES_STALL_AS_QUEUE]"

#define hpc_arm_cortex_a8_CYCLES_STALL_AS_WAIT_DATA_VT_DEF "S[hpc.arm_cortex_a8_CYCLES_STALL_AS_WAIT_DATA,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Number of cycles the processor stalls waiting on MRC data from NEON\"]]"
#define hpc_arm_cortex_a8_CYCLES_STALL_AS_WAIT_DATA_VT_REF "t[hpc.arm_cortex_a8_CYCLES_STALL_AS_WAIT_DATA]"

#define hpc_arm_cortex_a8_EVENTS_FROM_PMUEXTIN_0_VT_DEF "S[hpc.arm_cortex_a8_EVENTS_FROM_PMUEXTIN_0,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Counts any event from external input source PMUEXTIN[0]\"]]"
#define hpc_arm_cortex_a8_EVENTS_FROM_PMUEXTIN_0_VT_REF "t[hpc.arm_cortex_a8_EVENTS_FROM_PMUEXTIN_0]"

#define hpc_arm_cortex_a8_EVENTS_FROM_PMUEXTIN_0_1_VT_DEF "S[hpc.arm_cortex_a8_EVENTS_FROM_PMUEXTIN_0_1,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Counts any event from both external input sources PMUEXTIN[0] and PMUEXTIN[1]\"]]"
#define hpc_arm_cortex_a8_EVENTS_FROM_PMUEXTIN_0_1_VT_REF "t[hpc.arm_cortex_a8_EVENTS_FROM_PMUEXTIN_0_1]"

#define hpc_arm_cortex_a8_EVENTS_FROM_PMUEXTIN_1_VT_DEF "S[hpc.arm_cortex_a8_EVENTS_FROM_PMUEXTIN_1,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Counts any event from external input source PMUEXTIN[1]\"]]"
#define hpc_arm_cortex_a8_EVENTS_FROM_PMUEXTIN_1_VT_REF "t[hpc.arm_cortex_a8_EVENTS_FROM_PMUEXTIN_1]"

#define hpc_arm_cortex_a8_EXC_EXECUTED_VT_DEF "S[hpc.arm_cortex_a8_EXC_EXECUTED,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Exception return\"]]"
#define hpc_arm_cortex_a8_EXC_EXECUTED_VT_REF "t[hpc.arm_cortex_a8_EXC_EXECUTED]"

#define hpc_arm_cortex_a8_EXC_TAKEN_VT_DEF "S[hpc.arm_cortex_a8_EXC_TAKEN,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Exception taken\"]]"
#define hpc_arm_cortex_a8_EXC_TAKEN_VT_REF "t[hpc.arm_cortex_a8_EXC_TAKEN]"

#define hpc_arm_cortex_a8_INCREMENT_NO_INSTRUCTIONS_VT_DEF "S[hpc.arm_cortex_a8_INCREMENT_NO_INSTRUCTIONS,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Increment for every cycle that no instructions are available for issue\"]]"
#define hpc_arm_cortex_a8_INCREMENT_NO_INSTRUCTIONS_VT_REF "t[hpc.arm_cortex_a8_INCREMENT_NO_INSTRUCTIONS]"

#define hpc_arm_cortex_a8_INSTRUCTIONS_IN_CYCLE_VT_DEF "S[hpc.arm_cortex_a8_INSTRUCTIONS_IN_CYCLE,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"For every cycle, this event counts the number of instructions issued in that cycle. Multi-cycle instructions are only counted once\"]]"
#define hpc_arm_cortex_a8_INSTRUCTIONS_IN_CYCLE_VT_REF "t[hpc.arm_cortex_a8_INSTRUCTIONS_IN_CYCLE]"

#define hpc_arm_cortex_a8_INSTR_EXECUTED_VT_DEF "S[hpc.arm_cortex_a8_INSTR_EXECUTED,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Counts for all instructions\"]]"
#define hpc_arm_cortex_a8_INSTR_EXECUTED_VT_REF "t[hpc.arm_cortex_a8_INSTR_EXECUTED]"

#define hpc_arm_cortex_a8_L1D_CACHE_VT_DEF "S[hpc.arm_cortex_a8_L1D_CACHE,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Level 1 data cache access\"]]"
#define hpc_arm_cortex_a8_L1D_CACHE_VT_REF "t[hpc.arm_cortex_a8_L1D_CACHE]"

#define hpc_arm_cortex_a8_L1D_CACHE_MISS_VT_DEF "S[hpc.arm_cortex_a8_L1D_CACHE_MISS,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Any L1 data memory access that misses in the cache as a result of the hashing algorithm\"]]"
#define hpc_arm_cortex_a8_L1D_CACHE_MISS_VT_REF "t[hpc.arm_cortex_a8_L1D_CACHE_MISS]"

#define hpc_arm_cortex_a8_L1D_CACHE_REFILL_VT_DEF "S[hpc.arm_cortex_a8_L1D_CACHE_REFILL,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Level 1 data cache refill\"]]"
#define hpc_arm_cortex_a8_L1D_CACHE_REFILL_VT_REF "t[hpc.arm_cortex_a8_L1D_CACHE_REFILL]"

#define hpc_arm_cortex_a8_L1D_NEON_ACCESS_VT_DEF "S[hpc.arm_cortex_a8_L1D_NEON_ACCESS,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Any NEON cacheable data accesses for L1 data cache\"]]"
#define hpc_arm_cortex_a8_L1D_NEON_ACCESS_VT_REF "t[hpc.arm_cortex_a8_L1D_NEON_ACCESS]"

#define hpc_arm_cortex_a8_L1D_NEON_HITS_VT_DEF "S[hpc.arm_cortex_a8_L1D_NEON_HITS,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Any NEON access that hits in the L1 data cache\"]]"
#define hpc_arm_cortex_a8_L1D_NEON_HITS_VT_REF "t[hpc.arm_cortex_a8_L1D_NEON_HITS]"

#define hpc_arm_cortex_a8_L1D_PAGE_COLORING_ALIAS_VT_DEF "S[hpc.arm_cortex_a8_L1D_PAGE_COLORING_ALIAS,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Any L1 data memory access in which a page coloring alias occurs\"]]"
#define hpc_arm_cortex_a8_L1D_PAGE_COLORING_ALIAS_VT_REF "t[hpc.arm_cortex_a8_L1D_PAGE_COLORING_ALIAS]"

#define hpc_arm_cortex_a8_L1D_TLB_REFILL_VT_DEF "S[hpc.arm_cortex_a8_L1D_TLB_REFILL,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Level 1 data TLB refill\"]]"
#define hpc_arm_cortex_a8_L1D_TLB_REFILL_VT_REF "t[hpc.arm_cortex_a8_L1D_TLB_REFILL]"

#define hpc_arm_cortex_a8_L1I_CACHE_VT_DEF "S[hpc.arm_cortex_a8_L1I_CACHE,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Any L1 instruction cache access, excluding CP15 cache accesses\"]]"
#define hpc_arm_cortex_a8_L1I_CACHE_VT_REF "t[hpc.arm_cortex_a8_L1I_CACHE]"

#define hpc_arm_cortex_a8_L1I_CACHE_MISS_VT_DEF "S[hpc.arm_cortex_a8_L1I_CACHE_MISS,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Any L1 instruction memory access that misses in the cache as a result of the hashing algorithm\"]]"
#define hpc_arm_cortex_a8_L1I_CACHE_MISS_VT_REF "t[hpc.arm_cortex_a8_L1I_CACHE_MISS]"

#define hpc_arm_cortex_a8_L1I_CACHE_REFILL_VT_DEF "S[hpc.arm_cortex_a8_L1I_CACHE_REFILL,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Level 1 instruction cache refill\"]]"
#define hpc_arm_cortex_a8_L1I_CACHE_REFILL_VT_REF "t[hpc.arm_cortex_a8_L1I_CACHE_REFILL]"

#define hpc_arm_cortex_a8_L1I_TLB_REFILL_VT_DEF "S[hpc.arm_cortex_a8_L1I_TLB_REFILL,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Level 1 instruction TLB refill\"]]"
#define hpc_arm_cortex_a8_L1I_TLB_REFILL_VT_REF "t[hpc.arm_cortex_a8_L1I_TLB_REFILL]"

#define hpc_arm_cortex_a8_L2_CACHE_ACCESS_VT_DEF "S[hpc.arm_cortex_a8_L2_CACHE_ACCESS,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Any accesses to the L2 cache.\"]]"
#define hpc_arm_cortex_a8_L2_CACHE_ACCESS_VT_REF "t[hpc.arm_cortex_a8_L2_CACHE_ACCESS]"

#define hpc_arm_cortex_a8_L2_CACHE_MISS_VT_DEF "S[hpc.arm_cortex_a8_L2_CACHE_MISS,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Any cacheable miss in the L2 cache.\"]]"
#define hpc_arm_cortex_a8_L2_CACHE_MISS_VT_REF "t[hpc.arm_cortex_a8_L2_CACHE_MISS]"

#define hpc_arm_cortex_a8_L2_CACHE_ST_VT_DEF "S[hpc.arm_cortex_a8_L2_CACHE_ST,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Any store that is merged in the L2 memory system\"]]"
#define hpc_arm_cortex_a8_L2_CACHE_ST_VT_REF "t[hpc.arm_cortex_a8_L2_CACHE_ST]"

#define hpc_arm_cortex_a8_L2_CACHE_ST_TRANS_VT_DEF "S[hpc.arm_cortex_a8_L2_CACHE_ST_TRANS,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Any bufferable store transaction from load/store to L2 cache\"]]"
#define hpc_arm_cortex_a8_L2_CACHE_ST_TRANS_VT_REF "t[hpc.arm_cortex_a8_L2_CACHE_ST_TRANS]"

#define hpc_arm_cortex_a8_L2_NEON_ACCESS_VT_DEF "S[hpc.arm_cortex_a8_L2_NEON_ACCESS,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Any L2 cache accesses as a result of a NEON memory access\"]]"
#define hpc_arm_cortex_a8_L2_NEON_ACCESS_VT_REF "t[hpc.arm_cortex_a8_L2_NEON_ACCESS]"

#define hpc_arm_cortex_a8_L2_NEON_HITS_VT_DEF "S[hpc.arm_cortex_a8_L2_NEON_HITS,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Any NEON hit in the L2 cache\"]]"
#define hpc_arm_cortex_a8_L2_NEON_HITS_VT_REF "t[hpc.arm_cortex_a8_L2_NEON_HITS]"

#define hpc_arm_cortex_a8_MEM_READ_VT_DEF "S[hpc.arm_cortex_a8_MEM_READ,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Data read\"]]"
#define hpc_arm_cortex_a8_MEM_READ_VT_REF "t[hpc.arm_cortex_a8_MEM_READ]"

#define hpc_arm_cortex_a8_MEM_UNALIGNED_ACCESS_VT_DEF "S[hpc.arm_cortex_a8_MEM_UNALIGNED_ACCESS,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Unaligned load or store\"]]"
#define hpc_arm_cortex_a8_MEM_UNALIGNED_ACCESS_VT_REF "t[hpc.arm_cortex_a8_MEM_UNALIGNED_ACCESS]"

#define hpc_arm_cortex_a8_MEM_WRITE_VT_DEF "S[hpc.arm_cortex_a8_MEM_WRITE,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Data write\"]]"
#define hpc_arm_cortex_a8_MEM_WRITE_VT_REF "t[hpc.arm_cortex_a8_MEM_WRITE]"

#define hpc_arm_cortex_a8_OPERATIONS_ISSUED_VT_DEF "S[hpc.arm_cortex_a8_OPERATIONS_ISSUED,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Number of operations issued\"]]"
#define hpc_arm_cortex_a8_OPERATIONS_ISSUED_VT_REF "t[hpc.arm_cortex_a8_OPERATIONS_ISSUED]"

#define hpc_arm_cortex_a8_PC_BRANCH_MIS_PRED_VT_DEF "S[hpc.arm_cortex_a8_PC_BRANCH_MIS_PRED,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Branch mispredicted or not predicted\"]]"
#define hpc_arm_cortex_a8_PC_BRANCH_MIS_PRED_VT_REF "t[hpc.arm_cortex_a8_PC_BRANCH_MIS_PRED]"

#define hpc_arm_cortex_a8_PC_BRANCH_PRED_VT_DEF "S[hpc.arm_cortex_a8_PC_BRANCH_PRED,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Predictable branches\"]]"
#define hpc_arm_cortex_a8_PC_BRANCH_PRED_VT_REF "t[hpc.arm_cortex_a8_PC_BRANCH_PRED]"

#define hpc_arm_cortex_a8_PC_IMM_BRANCH_VT_DEF "S[hpc.arm_cortex_a8_PC_IMM_BRANCH,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Immediate branch\"]]"
#define hpc_arm_cortex_a8_PC_IMM_BRANCH_VT_REF "t[hpc.arm_cortex_a8_PC_IMM_BRANCH]"

#define hpc_arm_cortex_a8_PC_PROC_RETURN_VT_DEF "S[hpc.arm_cortex_a8_PC_PROC_RETURN,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Procedure return\"]]"
#define hpc_arm_cortex_a8_PC_PROC_RETURN_VT_REF "t[hpc.arm_cortex_a8_PC_PROC_RETURN]"

#define hpc_arm_cortex_a8_PC_WRITE_VT_DEF "S[hpc.arm_cortex_a8_PC_WRITE,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Software change of the PC\"]]"
#define hpc_arm_cortex_a8_PC_WRITE_VT_REF "t[hpc.arm_cortex_a8_PC_WRITE]"

#define hpc_arm_cortex_a8_PREDICTABLE_BRANCH_VT_DEF "S[hpc.arm_cortex_a8_PREDICTABLE_BRANCH,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Any predictable branch that is predicted to be taken\"]]"
#define hpc_arm_cortex_a8_PREDICTABLE_BRANCH_VT_REF "t[hpc.arm_cortex_a8_PREDICTABLE_BRANCH]"

#define hpc_arm_cortex_a8_PREDICTED_BRANCH_VT_DEF "S[hpc.arm_cortex_a8_PREDICTED_BRANCH,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Any predictable branch that is executed and taken\"]]"
#define hpc_arm_cortex_a8_PREDICTED_BRANCH_VT_REF "t[hpc.arm_cortex_a8_PREDICTED_BRANCH]"

#define hpc_arm_cortex_a8_REPLAY_EVENTS_IN_MEM_VT_DEF "S[hpc.arm_cortex_a8_REPLAY_EVENTS_IN_MEM,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Any replay event in the memory system\"]]"
#define hpc_arm_cortex_a8_REPLAY_EVENTS_IN_MEM_VT_REF "t[hpc.arm_cortex_a8_REPLAY_EVENTS_IN_MEM]"

#define hpc_arm_cortex_a8_RETRUN_STACK_NISPRE_VT_DEF "S[hpc.arm_cortex_a8_RETRUN_STACK_NISPRE,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Any return stack misprediction because of incorrect target address for a taken return stack pop\"]]"
#define hpc_arm_cortex_a8_RETRUN_STACK_NISPRE_VT_REF "t[hpc.arm_cortex_a8_RETRUN_STACK_NISPRE]"

#define hpc_arm_cortex_a8_SW_INCR_VT_DEF "S[hpc.arm_cortex_a8_SW_INCR,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Software Increment\"]]"
#define hpc_arm_cortex_a8_SW_INCR_VT_REF "t[hpc.arm_cortex_a8_SW_INCR]"

#define hpc_arm_cortex_a8_UNALIGNED_MEM_ACCESS_VT_DEF "S[hpc.arm_cortex_a8_UNALIGNED_MEM_ACCESS,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Any unaligned memory access that results in a replay\"]]"
#define hpc_arm_cortex_a8_UNALIGNED_MEM_ACCESS_VT_REF "t[hpc.arm_cortex_a8_UNALIGNED_MEM_ACCESS]"

#define hpc_arm_cortex_a8_WRITE_BUFFER_CYCLE_VT_DEF "S[hpc.arm_cortex_a8_WRITE_BUFFER_CYCLE,,n[cafe.COUNTER_METRIC_CLASS,1]n[cafe.LABEL,\"Any write buffer full cycle\"]]"
#define hpc_arm_cortex_a8_WRITE_BUFFER_CYCLE_VT_REF "t[hpc.arm_cortex_a8_WRITE_BUFFER_CYCLE]"

#define HPC_ARM_CTXA8_TYPE_ALL_VT_DEFS \
	hpc_arm_cortex_a8_BR_DIRECTION_MISPREDICTION_VT_DEF \
	hpc_arm_cortex_a8_CID_WRITE_VT_DEF \
	hpc_arm_cortex_a8_CLOCK_CYCLES_VT_DEF \
	hpc_arm_cortex_a8_CYCLES_AXI_READ_VT_DEF \
	hpc_arm_cortex_a8_CYCLES_AXI_WRITE_VT_DEF \
	hpc_arm_cortex_a8_CYCLES_NEON_NOT_IDLE_VT_DEF \
	hpc_arm_cortex_a8_CYCLES_STALL_AS_QUEUE_VT_DEF \
	hpc_arm_cortex_a8_CYCLES_STALL_AS_WAIT_DATA_VT_DEF \
	hpc_arm_cortex_a8_EVENTS_FROM_PMUEXTIN_0_VT_DEF \
	hpc_arm_cortex_a8_EVENTS_FROM_PMUEXTIN_0_1_VT_DEF \
	hpc_arm_cortex_a8_EVENTS_FROM_PMUEXTIN_1_VT_DEF \
	hpc_arm_cortex_a8_EXC_EXECUTED_VT_DEF \
	hpc_arm_cortex_a8_EXC_TAKEN_VT_DEF \
	hpc_arm_cortex_a8_INCREMENT_NO_INSTRUCTIONS_VT_DEF \
	hpc_arm_cortex_a8_INSTRUCTIONS_IN_CYCLE_VT_DEF \
	hpc_arm_cortex_a8_INSTR_EXECUTED_VT_DEF \
	hpc_arm_cortex_a8_L1D_CACHE_VT_DEF \
	hpc_arm_cortex_a8_L1D_CACHE_MISS_VT_DEF \
	hpc_arm_cortex_a8_L1D_CACHE_REFILL_VT_DEF \
	hpc_arm_cortex_a8_L1D_NEON_ACCESS_VT_DEF \
	hpc_arm_cortex_a8_L1D_NEON_HITS_VT_DEF \
	hpc_arm_cortex_a8_L1D_PAGE_COLORING_ALIAS_VT_DEF \
	hpc_arm_cortex_a8_L1D_TLB_REFILL_VT_DEF \
	hpc_arm_cortex_a8_L1I_CACHE_VT_DEF \
	hpc_arm_cortex_a8_L1I_CACHE_MISS_VT_DEF \
	hpc_arm_cortex_a8_L1I_CACHE_REFILL_VT_DEF \
	hpc_arm_cortex_a8_L1I_TLB_REFILL_VT_DEF \
	hpc_arm_cortex_a8_L2_CACHE_ACCESS_VT_DEF \
	hpc_arm_cortex_a8_L2_CACHE_MISS_VT_DEF \
	hpc_arm_cortex_a8_L2_CACHE_ST_VT_DEF \
	hpc_arm_cortex_a8_L2_CACHE_ST_TRANS_VT_DEF \
	hpc_arm_cortex_a8_L2_NEON_ACCESS_VT_DEF \
	hpc_arm_cortex_a8_L2_NEON_HITS_VT_DEF \
	hpc_arm_cortex_a8_MEM_READ_VT_DEF \
	hpc_arm_cortex_a8_MEM_UNALIGNED_ACCESS_VT_DEF \
	hpc_arm_cortex_a8_MEM_WRITE_VT_DEF \
	hpc_arm_cortex_a8_OPERATIONS_ISSUED_VT_DEF \
	hpc_arm_cortex_a8_PC_BRANCH_MIS_PRED_VT_DEF \
	hpc_arm_cortex_a8_PC_BRANCH_PRED_VT_DEF \
	hpc_arm_cortex_a8_PC_IMM_BRANCH_VT_DEF \
	hpc_arm_cortex_a8_PC_PROC_RETURN_VT_DEF \
	hpc_arm_cortex_a8_PC_WRITE_VT_DEF \
	hpc_arm_cortex_a8_PREDICTABLE_BRANCH_VT_DEF \
	hpc_arm_cortex_a8_PREDICTED_BRANCH_VT_DEF \
	hpc_arm_cortex_a8_REPLAY_EVENTS_IN_MEM_VT_DEF \
	hpc_arm_cortex_a8_RETRUN_STACK_NISPRE_VT_DEF \
	hpc_arm_cortex_a8_SW_INCR_VT_DEF \
	hpc_arm_cortex_a8_UNALIGNED_MEM_ACCESS_VT_DEF \
	hpc_arm_cortex_a8_WRITE_BUFFER_CYCLE_VT_DEF \

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
