/*
 * Copyright (c) 2021 Wind River Systems, Inc.
 *
 * The right to copy, distribute, modify or otherwise make use
 * of this software may be licensed only pursuant to the terms
 * of an applicable Wind River license agreement.
 */

/*
 *  DO NOT MODIFY THIS FILE MANUALLY
 *
 *  This file is automatically generated from
 *  the method file (extended with *.m).
 *
 */

#ifndef _INCvxbIntMethodh
#define _INCvxbIntMethodh

#ifdef __cplusplus
extern "C" {
#endif

VXB_DEVMETHOD_DECL(vxbIntConfig)
typedef STATUS vxbIntConfig_t (VXB_DEV_ID pDev, UINT32 vector, VXB_INTR_ENTRY * pVxbIntrEntry);
STATUS VXB_INT_CONFIG (VXB_DEV_ID pDev, UINT32 vector, VXB_INTR_ENTRY * pVxbIntrEntry);

VXB_DEVMETHOD_DECL(vxbIntUnconfig)
typedef STATUS vxbIntUnconfig_t (VXB_DEV_ID pDev, UINT32 vector, VXB_INTR_ENTRY * pVxbIntrEntry);
STATUS VXB_INT_UNCONFIG (VXB_DEV_ID pDev, UINT32 vector, VXB_INTR_ENTRY * pVxbIntrEntry);

VXB_DEVMETHOD_DECL(vxbIntEnable)
typedef STATUS vxbIntEnable_t (VXB_DEV_ID pDev, UINT32 vector, VXB_INTR_ENTRY * pVxbIntrEntry);
STATUS VXB_INT_ENABLE (VXB_DEV_ID pDev, UINT32 vector, VXB_INTR_ENTRY * pVxbIntrEntry);

VXB_DEVMETHOD_DECL(vxbIntDisable)
typedef STATUS vxbIntDisable_t (VXB_DEV_ID pDev, UINT32 vector, VXB_INTR_ENTRY * pVxbIntrEntry);
STATUS VXB_INT_DISABLE (VXB_DEV_ID pDev, UINT32 vector, VXB_INTR_ENTRY * pVxbIntrEntry);

VXB_DEVMETHOD_DECL(vxbIntBind)
typedef STATUS vxbIntBind_t (VXB_DEV_ID pDev, UINT32 vector, UINT32 cpu, VXB_INTR_ENTRY * pVxbIntrEntry);
STATUS VXB_INT_BIND (VXB_DEV_ID pDev, UINT32 vector, UINT32 cpu, VXB_INTR_ENTRY * pVxbIntrEntry);

VXB_DEVMETHOD_DECL(vxbIntIpi)
typedef STATUS vxbIntIpi_t (VXB_DEV_ID pDev, UINT32 vector, phys_cpuset_t phys_cpus);
STATUS VXB_INT_IPI (VXB_DEV_ID pDev, UINT32 vector, phys_cpuset_t phys_cpus);

VXB_DEVMETHOD_DECL(vxbIntVecSet)
typedef STATUS vxbIntVecSet_t (VXB_DEV_ID pDev, UINT32 vector, VXB_INTR_ENTRY * pVxbIntrEntry, VOIDFUNCPTR pFunc, void * pArg);
STATUS VXB_INT_VEC_SET (VXB_DEV_ID pDev, UINT32 vector, VXB_INTR_ENTRY * pVxbIntrEntry, VOIDFUNCPTR pFunc, void * pArg);

VXB_DEVMETHOD_DECL(vxbIntVecClear)
typedef STATUS vxbIntVecClear_t (VXB_DEV_ID pDev, UINT32 vector, VXB_INTR_ENTRY * pVxbIntrEntry, VOIDFUNCPTR pFunc, void * pArg);
STATUS VXB_INT_VEC_CLEAR (VXB_DEV_ID pDev, UINT32 vector, VXB_INTR_ENTRY * pVxbIntrEntry, VOIDFUNCPTR pFunc, void * pArg);

#ifdef __cplusplus
}
#endif

#endif /* _INCvxbIntMethodh */

